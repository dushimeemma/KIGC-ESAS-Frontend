[{"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\index.js":"1","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\App.js":"2","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\store.js":"3","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\Routes\\index.js":"4","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\index.js":"5","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Dashboard.js":"6","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\HomePage.js":"7","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Login.js":"8","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Signup.js":"9","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Footer.js":"10","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Role.js":"11","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Header.js":"12","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Attendance.js":"13","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Student.js":"14","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\AttendanceRecord.js":"15","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\RoleSingle.js":"16","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Seat.js":"17","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\StudentSingle.js":"18","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\CourseRecord.js":"19","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Finance.js":"20","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Course.js":"21","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\DefaultLayoutDashboard.js":"22","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\FinanceRecord.js":"23","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\SeatRecord.js":"24","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Sidebar.js":"25","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Image.js":"26","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\validations\\login.js":"27","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Card.js":"28","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\errors\\index.js":"29","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\users\\index.js":"30","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\finance\\index.js":"31","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\auth\\index.js":"32","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\course\\index.js":"33","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\roles\\index.js":"34","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\attendance\\index.js":"35","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\seat\\index.js":"36","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\students\\index.js":"37","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\validations\\index.js":"38","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\users\\index.js":"39","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\course\\index.js":"40","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\roles\\index.js":"41","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\attendance\\index.js":"42","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\students\\index.js":"43","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\finance\\index.js":"44","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\seat\\index.js":"45","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\auth\\index.js":"46","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\attendance\\types.js":"47","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\seat\\types.js":"48","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\roles\\types.js":"49","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\students\\types.js":"50","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\course\\types.js":"51","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\users\\types.js":"52","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\auth\\types.js":"53","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\finance\\types.js":"54","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\errors\\types.js":"55","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\errors\\index.js":"56","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\setUpAxios\\index.js":"57"},{"size":151,"mtime":1618981803907,"results":"58","hashOfConfig":"59"},{"size":310,"mtime":1618981803853,"results":"60","hashOfConfig":"59"},{"size":383,"mtime":1618981803924,"results":"61","hashOfConfig":"59"},{"size":2532,"mtime":1618987839497,"results":"62","hashOfConfig":"59"},{"size":473,"mtime":1618981803916,"results":"63","hashOfConfig":"59"},{"size":5023,"mtime":1618981803890,"results":"64","hashOfConfig":"59"},{"size":3313,"mtime":1618989718702,"results":"65","hashOfConfig":"59"},{"size":3906,"mtime":1618990657460,"results":"66","hashOfConfig":"59"},{"size":4627,"mtime":1618990754640,"results":"67","hashOfConfig":"59"},{"size":226,"mtime":1618981803894,"results":"68","hashOfConfig":"59"},{"size":5525,"mtime":1618981803899,"results":"69","hashOfConfig":"59"},{"size":1685,"mtime":1618981803895,"results":"70","hashOfConfig":"59"},{"size":2303,"mtime":1618981803884,"results":"71","hashOfConfig":"59"},{"size":8357,"mtime":1619010265170,"results":"72","hashOfConfig":"59"},{"size":4757,"mtime":1618981803885,"results":"73","hashOfConfig":"59"},{"size":4389,"mtime":1618981803899,"results":"74","hashOfConfig":"59"},{"size":2152,"mtime":1618981803900,"results":"75","hashOfConfig":"59"},{"size":5791,"mtime":1619011936776,"results":"76","hashOfConfig":"59"},{"size":4313,"mtime":1618981803889,"results":"77","hashOfConfig":"59"},{"size":2280,"mtime":1618981803892,"results":"78","hashOfConfig":"59"},{"size":1810,"mtime":1618981803888,"results":"79","hashOfConfig":"59"},{"size":5172,"mtime":1618981803891,"results":"80","hashOfConfig":"59"},{"size":4658,"mtime":1618981803893,"results":"81","hashOfConfig":"59"},{"size":5477,"mtime":1618981803901,"results":"82","hashOfConfig":"59"},{"size":1322,"mtime":1618981803902,"results":"83","hashOfConfig":"59"},{"size":188,"mtime":1618981803897,"results":"84","hashOfConfig":"59"},{"size":262,"mtime":1618981803948,"results":"85","hashOfConfig":"59"},{"size":615,"mtime":1618981803887,"results":"86","hashOfConfig":"59"},{"size":461,"mtime":1618981803913,"results":"87","hashOfConfig":"59"},{"size":332,"mtime":1618981803922,"results":"88","hashOfConfig":"59"},{"size":388,"mtime":1618981803915,"results":"89","hashOfConfig":"59"},{"size":1058,"mtime":1618981803911,"results":"90","hashOfConfig":"59"},{"size":386,"mtime":1618981803912,"results":"91","hashOfConfig":"59"},{"size":1191,"mtime":1618981803918,"results":"92","hashOfConfig":"59"},{"size":392,"mtime":1618981803909,"results":"93","hashOfConfig":"59"},{"size":532,"mtime":1618981803919,"results":"94","hashOfConfig":"59"},{"size":1022,"mtime":1618981803921,"results":"95","hashOfConfig":"59"},{"size":334,"mtime":1618981803947,"results":"96","hashOfConfig":"59"},{"size":416,"mtime":1618981803877,"results":"97","hashOfConfig":"59"},{"size":444,"mtime":1618981803861,"results":"98","hashOfConfig":"59"},{"size":2045,"mtime":1618981803868,"results":"99","hashOfConfig":"59"},{"size":460,"mtime":1618981803856,"results":"100","hashOfConfig":"59"},{"size":2063,"mtime":1618981803875,"results":"101","hashOfConfig":"59"},{"size":448,"mtime":1618981803866,"results":"102","hashOfConfig":"59"},{"size":749,"mtime":1618981803871,"results":"103","hashOfConfig":"59"},{"size":1058,"mtime":1618981803859,"results":"104","hashOfConfig":"59"},{"size":71,"mtime":1618981803857,"results":"105","hashOfConfig":"59"},{"size":87,"mtime":1618981803872,"results":"106","hashOfConfig":"59"},{"size":204,"mtime":1618981803869,"results":"107","hashOfConfig":"59"},{"size":246,"mtime":1618981803876,"results":"108","hashOfConfig":"59"},{"size":63,"mtime":1618981803862,"results":"109","hashOfConfig":"59"},{"size":55,"mtime":1618981803878,"results":"110","hashOfConfig":"59"},{"size":203,"mtime":1618981803860,"results":"111","hashOfConfig":"59"},{"size":65,"mtime":1618981803867,"results":"112","hashOfConfig":"59"},{"size":90,"mtime":1618981803864,"results":"113","hashOfConfig":"59"},{"size":254,"mtime":1618981803863,"results":"114","hashOfConfig":"59"},{"size":336,"mtime":1618981803873,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"39wpw2",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\index.js",[],["256","257"],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\App.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\store.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\Routes\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Dashboard.js",["258","259","260"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getUsers } from '../actions/users';\r\nimport { getRoles, assignRole } from '../actions/roles';\r\n\r\nconst Dashboard = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n  React.useEffect(() => {\r\n    dispatch(getRoles());\r\n  }, []);\r\n  const users = useSelector((state) => state.users.users);\r\n  const roles = useSelector((state) => state.roles.roles);\r\n  const msg = useSelector((state) => state.roles.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\r\n  const [backErrs, setBackErrs] = React.useState('');\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    role: '',\r\n    email: '',\r\n  });\r\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\r\n  const [backMsg, setBackMsg] = React.useState('');\r\n  React.useEffect(() => {\r\n    setBackErrs(backErrors);\r\n    setTimeout(() => {\r\n      setBackErrs('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n  React.useEffect(() => {\r\n    setBackMsg(msg);\r\n    setTimeout(() => {\r\n      setBackMsg('');\r\n    }, 5000);\r\n  }, [msg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmmitting(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(assignRole(state));\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 5000);\r\n    }\r\n  }, [isSubmitting]);\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 5000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='back-color'>\r\n          Assign Role\r\n        </ModalHeader>\r\n        {backMsg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {backMsg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErrs ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErrs}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Role</Label>\r\n              <Input type='select' name='role' onChange={onChange}>\r\n                <option value=''>Select Role</option>\r\n                {roles.map((role) => (\r\n                  <option value={role.name} key={role.id}>\r\n                    {role.name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Email</Label>\r\n              <Input type='select' name='email' onChange={onChange}>\r\n                <option value=''>Select User Email</option>\r\n                {users.map((user) => (\r\n                  <option value={user.email} key={user.id}>\r\n                    {user.email}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='back-color'>\r\n            <Button color='secondary'>Assign</Button>\r\n            <Button color='danger' onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>All Users And Roles</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user, index) => (\r\n                <tr key={user.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.Role ? user.Role.name : 'No Role'}</td>\r\n                  <td>\r\n                    <Button className='btn btn-sm' onClick={toggle}>\r\n                      <i className='fas fa-user-edit'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\HomePage.js",["261","262"],"import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  Alert,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport HomeImage from \"./Image\";\r\nimport { viewSeat } from \"../actions/seat\";\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const msg = useSelector((state) => state.seat.msg);\r\n  const seat = useSelector((state) => state.seat.seat);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const [state, setState] = React.useState({\r\n    reg: \"\",\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const [backErr, setBackErr] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setIsSubmitting(false);\r\n    setTimeout(() => {\r\n      setBackErr(\"\");\r\n    }, 15000);\r\n  }, [backErrors]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(viewSeat(state));\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 16000);\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    setIsSubmitting(false);\r\n  }, [seat]);\r\n\r\n  if (Object.keys(seat).length > 0) {\r\n    setTimeout(() => {\r\n      window.location.reload(false);\r\n    }, 15000);\r\n  }\r\n\r\n  const { reg } = state;\r\n  return (\r\n    <Row className=\"main-height\">\r\n      <HomeImage />\r\n      <Col className=\"\">\r\n        <div className=\" border p-2 aside back-color\">\r\n          <h3 className=\"text-center mt-2 mb-2\">\r\n            Enter Your Registration Number <br />\r\n            To View Your Seat\r\n          </h3>\r\n          <hr />\r\n          <Form onSubmit={onSubmit}>\r\n            <FormGroup>\r\n              <Label>Registration Number</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"reg\"\r\n                onChange={onChange}\r\n                value={reg}\r\n                placeholder=\"eg: D/BCS/17/09/6177\"\r\n              />\r\n            </FormGroup>\r\n            <Button className=\"btn btn-secondary btn-block mb-2\">\r\n              {isSubmitting ? <Spinner color=\"light\" size=\"sm\" /> : \"View Seat\"}\r\n            </Button>\r\n          </Form>\r\n          {backErr ? (\r\n            <Alert className=\"text-center\" color=\"danger\">\r\n              {backErr}\r\n            </Alert>\r\n          ) : null}\r\n          {Object.keys(seat).length > 0 ? (\r\n            <ListGroup>\r\n              <ListGroupItem color=\"success\">Name: {seat.name}</ListGroupItem>\r\n              <ListGroupItem color=\"success\">RegNo: {seat.regNo}</ListGroupItem>\r\n              <ListGroupItem color=\"success\">Level: {seat.level}</ListGroupItem>\r\n              <ListGroupItem color=\"success\">\r\n                Course: {seat.course.name}\r\n              </ListGroupItem>\r\n              <ListGroupItem color=\"success\">\r\n                Seat: {seat.seat.seatNumber}-{seat.seat.room}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          ) : null}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Login.js",["263","264"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { loginUser } from '../actions/auth';\r\nimport Image from './Image';\r\nimport validation from '../validations/login';\r\n\r\nconst Login = (props) => {\r\n  const dispatch = useDispatch();\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const backMsg = useSelector((state) => state.auth.msg);\r\n  const checkIsAuth = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  const [backErrs, setBackErrs] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n  const [state, setState] = React.useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  React.useEffect(() => {\r\n    setBackErrs(backErrors);\r\n    setTimeout(() => {\r\n      setBackErrs('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validation(state));\r\n    setIsSubmitting(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (isSubmitting && Object.keys(errors).length === 0) {\r\n      dispatch(loginUser(state));\r\n    }\r\n  }, [errors]);\r\n  React.useEffect(() => {\r\n    if (checkIsAuth) {\r\n      setTimeout(() => {\r\n        setState({\r\n          email: '',\r\n          password: '',\r\n        });\r\n        props.history.push('/default-dashboard');\r\n        window.location.reload(false);\r\n      }, 5000);\r\n    }\r\n  }, [checkIsAuth]);\r\n  const { email, password } = state;\r\n  const { emailErrors, passwordErrors } = errors;\r\n  return (\r\n    <Row className='main-height'>\r\n      <Image />\r\n      <Col className=\"\">\r\n        <div className=\" border p-2 aside back-color\">\r\n        <h3 className='text-center'>\r\n          Login To <br />\r\n          KIGC-ESAS\r\n        </h3>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErrs ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErrs}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <hr />\r\n        <Form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <Label>Email</Label>\r\n            <Input\r\n              type='text'\r\n              name='email'\r\n              onChange={onChange}\r\n              value={email}\r\n              placeholder='eg: dushimeemma@gmail.com'\r\n              className={emailErrors ? 'border-danger' : 'border-success'}\r\n            />\r\n            {emailErrors ? (\r\n              <Alert className='alert alert-danger background'>\r\n                {emailErrors}\r\n              </Alert>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>Password</Label>\r\n            <Input\r\n              type='password'\r\n              name='password'\r\n              onChange={onChange}\r\n              value={password}\r\n              placeholder='eg: Password123'\r\n              className={passwordErrors ? 'border-danger' : 'border-success'}\r\n            />\r\n            {passwordErrors ? (\r\n              <Alert className='alert alert-danger background'>\r\n                {passwordErrors}\r\n              </Alert>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </FormGroup>\r\n          <Button className='btn btn-block'>Login</Button>\r\n        </Form>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Signup.js",["265","266"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport { createUser } from \"../actions/auth\";\r\nimport Image from \"../components/Image\";\r\nimport validation from \"../validations\";\r\n\r\nconst Signup = (props) => {\r\n  const dispatch = useDispatch();\r\n  const backMsg = useSelector((state) => state.auth.msg);\r\n  const checkSuccess = useSelector((state) => state.auth.registered);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const [backErrs, setBackErrs] = React.useState(\"\");\r\n  const [msg, setMsg] = React.useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg(\"\");\r\n    }, 5000);\r\n  }, [backMsg]);\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validation(state));\r\n    setIsSubmitting(true);\r\n  };\r\n  React.useEffect(() => {\r\n    setBackErrs(backErrors);\r\n    setTimeout(() => {\r\n      setBackErrs(\"\");\r\n    }, 5000);\r\n  }, [backErrors]);\r\n  React.useEffect(() => {\r\n    if (isSubmitting && Object.keys(errors).length === 0) {\r\n      dispatch(createUser(state));\r\n    }\r\n  }, [errors]);\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        setState({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n        });\r\n        props.history.push(\"/login\");\r\n      }, 5000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const { name, email, password } = state;\r\n  const { nameErrors, emailErrors, passwordErrors } = errors;\r\n  return (\r\n    <Row className=\"main-height\">\r\n      <Col md=\"6\" className=\"\">\r\n        <div className=\" border p-2 aside back-color\">\r\n          <h3 className=\"text-center\">\r\n            Create New Account <br /> To KIGC-ESAS\r\n          </h3>\r\n          {msg ? (\r\n            <Alert color=\"success\" className=\"text-center\">\r\n              {msg}\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {backErrs ? (\r\n            <Alert color=\"danger\" className=\"text-center\">\r\n              {backErrs}\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <hr />\r\n          <Form onSubmit={onSubmit}>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"eg: Emma Dushime\"\r\n                onChange={onChange}\r\n                value={name}\r\n                className={nameErrors ? \"border-danger\" : \"border-success\"}\r\n              />\r\n              {nameErrors ? (\r\n                <Label className=\"alert alert-danger background\">\r\n                  {nameErrors}\r\n                </Label>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Email</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"eg: dushimeemma@gmail.com\"\r\n                onChange={onChange}\r\n                value={email}\r\n                className={emailErrors ? \"border-danger\" : \"border-success\"}\r\n              />\r\n              {emailErrors ? (\r\n                <Label className=\"alert alert-danger background\">\r\n                  {emailErrors}\r\n                </Label>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"eg: Password123\"\r\n                onChange={onChange}\r\n                value={password}\r\n                className={passwordErrors ? \"border-danger\" : \"border-success\"}\r\n              />\r\n              {passwordErrors ? (\r\n                <Label className=\"alert alert-danger background\">\r\n                  {passwordErrors}\r\n                </Label>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </FormGroup>\r\n            <Button className=\"btn btn-block\">Register</Button>\r\n          </Form>\r\n        </div>\r\n      </Col>\r\n      <Image />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Footer.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Role.js",["267","268","269"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Alert,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getRoles, deleteRole, createRole, getRole } from '../actions/roles';\r\n\r\nconst Role = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getRoles());\r\n  }, []);\r\n\r\n  const roles = useSelector((state) => state.roles.roles);\r\n  const deleteSuccess = useSelector((state) => state.roles.deleteSuccess);\r\n  const backMsg = useSelector((state) => state.roles.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.roles.createSuccess);\r\n  const [backErr, setBackErr] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n    description: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setTimeout(() => {\r\n      setBackErr('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  const onClickDelete = (id) => {\r\n    dispatch(deleteRole(id));\r\n  };\r\n\r\n  const onClickView = (id) => {\r\n    props.history.push(`/role/${id}`);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      if (deleteSuccess) {\r\n        window.location.reload(false);\r\n      }\r\n    }, 6000);\r\n  }, [deleteSuccess]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(createRole(state));\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      if (checkSuccess) {\r\n        window.location.reload(false);\r\n      }\r\n    }, 6000);\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const { name, description } = state;\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='back-color'>\r\n          Create New Role\r\n        </ModalHeader>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErr ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErr}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type='text' name='name' onChange={onChange} value={name} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Description</Label>\r\n              <Input\r\n                type='text'\r\n                name='description'\r\n                onChange={onChange}\r\n                value={description}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='back-color'>\r\n            <Button color='secondary'>Create</Button>\r\n            <Button color='danger' onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Sidebar />\r\n\r\n      <Col md='9'>\r\n        <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\r\n          Create Role\r\n        </Button>\r\n        <Container>\r\n          <h3 className='text-center'>All Roles</h3>\r\n          {msg ? (\r\n            <Alert color='success' className='text-center'>\r\n              {msg}\r\n            </Alert>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {backErr ? (\r\n            <Alert color='danger' className='text-center'>\r\n              {backErr}\r\n            </Alert>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {roles.map((role, index) => (\r\n                <tr key={role.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{role.name}</td>\r\n                  <td>{role.description}</td>\r\n                  <td>\r\n                    <Button\r\n                      className='btn btn-sm m-1'\r\n                      onClick={() => onClickView(role.id)}\r\n                    >\r\n                      <i className='fas fa-eye'></i>\r\n                    </Button>\r\n                    <Button\r\n                      className='btn btn-sm m-1'\r\n                      onClick={() => onClickDelete(role.id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Header.js",["270"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navbar, NavbarBrand, Nav, NavLink, NavItem } from 'reactstrap';\r\n\r\nimport './styles.scss';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const username = localStorage.getItem('username');\r\n  const [isLoggedOut, setIsLoggedOut] = React.useState(false);\r\n  const onClick = () => {\r\n    setIsLoggedOut(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (isLoggedOut) {\r\n      dispatch(logout());\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 3000);\r\n    }\r\n  }, [isLoggedOut]);\r\n  const guestLink = (\r\n    <Nav className='ml-auto'>\r\n      <NavItem>\r\n        <NavLink href='/login' className='text-color'>\r\n          Login\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='/register' className='text-color'>\r\n          Register\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  );\r\n  const authLink = (\r\n    <Nav className='ml-auto'>\r\n      <NavItem>\r\n        <NavLink href='/dashboard' className='text-color'>\r\n          Welcome <strong className='text-capitalize'>{username}</strong>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink\r\n          onClick={onClick}\r\n          className='text-color cursor-pointer'\r\n          id='logout'\r\n        >\r\n          Logout\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  );\r\n  return (\r\n    <Navbar className='back-color mb-2'>\r\n      <NavbarBrand href='/' className='text-color'>\r\n        KIGC | ESAS\r\n      </NavbarBrand>\r\n      {username ? authLink : guestLink}\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Attendance.js",["271"],"import React from 'react';\r\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudents } from '../actions/students';\r\n\r\nconst Attendance = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudents());\r\n  }, []);\r\n  const students = useSelector((state) => state.students.students);\r\n  const onClickRecord = (id) => {\r\n    props.history.push(`/attendance/record/${id}`);\r\n  };\r\n  return (\r\n    <Row className='main-height'>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>All Students Attendance</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Value</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {students.map((student, index) => (\r\n                <tr key={student.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{student.regNo}</td>\r\n                  <td>{student.level}</td>\r\n                  <td>{student.Course ? student.Course.name : 'No course'}</td>\r\n                  <td>\r\n                    {student.Attendance\r\n                      ? student.Attendance.percentage\r\n                      : 'Record Attandance'}\r\n                    %\r\n                  </td>\r\n                  <td>\r\n                    {student.Attendance\r\n                      ? student.Attendance.status\r\n                      : 'No record'}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      className='btn btn-sm m-1'\r\n                      onClick={() => onClickRecord(student.id)}\r\n                    >\r\n                      <i className='fas fa-eye'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Student.js",["272","273","274"],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\AttendanceRecord.js",["275","276"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudent } from '../actions/students';\r\nimport { record } from '../actions/attendance';\r\n\r\nconst AttendanceRecord = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudent(props.match.params.slug));\r\n  }, []);\r\n  const student = useSelector((state) => state.students.student);\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    percentage: '',\r\n  });\r\n  const [backErr, setBackErr] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const backMsg = useSelector((state) => state.attendance.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.attendance.recordSuccess);\r\n\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setTimeout(() => {\r\n      setBackErr('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(record(state, props.match.params.slug));\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 6000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const { percentage } = state;\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='background'>\r\n          Record Attendance\r\n        </ModalHeader>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErr ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErr}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Percentage</Label>\r\n              <Input\r\n                type='text'\r\n                name='percentage'\r\n                placeholder='eg: 85'\r\n                onChange={onChange}\r\n                value={percentage}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='background'>\r\n            <Button className='btn btn-secondary'>Record</Button>\r\n            <Button className='btn btn-danger' onClick={toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>Single Student Attendance</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Value</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{student.id}</td>\r\n                <td>{student.regNo}</td>\r\n                <td>{student.level}</td>\r\n                <td>\r\n                  {student.Course ? student.Course.name : 'Record Course'}\r\n                </td>\r\n                <td>\r\n                  {student.Attendance\r\n                    ? student.Attendance.percentage\r\n                    : 'Record Attendance'}\r\n                  %\r\n                </td>\r\n                <td>\r\n                  {student.Attendance ? student.Attendance.status : 'No Record'}\r\n                </td>\r\n                <td>\r\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\r\n                    <i className='fas fa-edit'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AttendanceRecord;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\RoleSingle.js",["277","278"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getRole, updateRole } from '../actions/roles';\r\n\r\nconst RoleSingle = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getRole(props.match.params.slug));\r\n  }, []);\r\n  const role = useSelector((state) => state.roles.role);\r\n  const backMsg = useSelector((state) => state.roles.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.roles.updateSuccess);\r\n  const [state, setState] = React.useState({\r\n    id: '',\r\n    name: '',\r\n    description: '',\r\n  });\r\n  const [modal, setModal] = React.useState(false);\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const [backErr, setBackErr] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n  React.useEffect(() => {\r\n    if (Object.keys(role).length !== 0) {\r\n      setState({\r\n        id: role.id,\r\n        name: role.name,\r\n        description: role.description,\r\n      });\r\n    }\r\n  }, [role]);\r\n\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setTimeout(() => {\r\n      setBackErr('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const { id, name, description } = state;\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(updateRole(state, id));\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 6000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='back-color'>\r\n          Update Role\r\n        </ModalHeader>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErr ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErr}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type='text' name='name' onChange={onChange} value={name} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Description</Label>\r\n              <Input\r\n                type='text'\r\n                name='description'\r\n                onChange={onChange}\r\n                value={description}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='back-color'>\r\n            <Button color='secondary'>Update</Button>\r\n            <Button color='danger' onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>Single Role</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{role.name}</td>\r\n                <td>{role.description}</td>\r\n                <td>\r\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\r\n                    <i className='fas fa-edit'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RoleSingle;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Seat.js",["279"],"import React from 'react';\r\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudents } from '../actions/students';\r\n\r\nconst Seat = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudents());\r\n  }, []);\r\n  const students = useSelector((state) => state.students.students);\r\n  const onClickView = (id) => {\r\n    props.history.push(`/seat/record/${id}`);\r\n  };\r\n  return (\r\n    <Row className='main-height'>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>\r\n            All Students With Their Respective Seats\r\n          </h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Seat &#38;&#38; Room</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {students.map((student, index) => (\r\n                <tr key={student.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{student.regNo}</td>\r\n                  <td>{student.level}</td>\r\n                  <td>\r\n                    {student.Course ? student.Course.name : 'Record Course'}\r\n                  </td>\r\n                  <td>\r\n                    {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\r\n                    {student.Seat ? student.Seat.room : 'Room'}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      className='btn btn-sm m-1'\r\n                      onClick={() => onClickView(student.id)}\r\n                    >\r\n                      <i className='fas fa-eye'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Seat;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\StudentSingle.js",["280","281","282"],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\CourseRecord.js",["283","284"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudent } from '../actions/students';\r\nimport { record } from '../actions/course';\r\n\r\nconst CourseRecord = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudent(props.match.params.slug));\r\n  }, []);\r\n  const student = useSelector((state) => state.students.student);\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n  });\r\n  const [backErr, setBackErr] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const backMsg = useSelector((state) => state.course.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.course.recordSuccess);\r\n\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setTimeout(() => {\r\n      setBackErr('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(record(state, props.match.params.slug));\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 6000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const { name } = state;\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='background'>\r\n          Record Course\r\n        </ModalHeader>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErr ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErr}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder='eg: JavaScript'\r\n                onChange={onChange}\r\n                value={name}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='background'>\r\n            <Button className='btn btn-secondary'>Record</Button>\r\n            <Button className='btn btn-danger' onClick={toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>Single Student Course</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{student.id}</td>\r\n                <td>{student.regNo}</td>\r\n                <td>{student.level}</td>\r\n                <td>\r\n                  {student.Course ? student.Course.name : 'Record Course'}\r\n                </td>\r\n                <td>\r\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\r\n                    <i className='fas fa-edit'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CourseRecord;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Finance.js",["285"],"import React from 'react';\r\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudents } from '../actions/students';\r\n\r\nconst Finance = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudents());\r\n  }, []);\r\n  const students = useSelector((state) => state.students.students);\r\n  const onClickView = (id) => {\r\n    props.history.push(`/finance/record/${id}`);\r\n  };\r\n  return (\r\n    <Row className='main-height'>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>All Students Financial Status</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Value</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {students.map((student, index) => (\r\n                <tr key={student.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{student.regNo}</td>\r\n                  <td>{student.level}</td>\r\n                  <td>\r\n                    {student.Course ? student.Course.name : 'Record Course'}\r\n                  </td>\r\n                  <td>\r\n                    {student.Finance\r\n                      ? student.Finance.amount\r\n                      : 'Record Finance'}\r\n                    Rwfs\r\n                  </td>\r\n                  <td>\r\n                    {student.Finance ? student.Finance.status : 'No Record'}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      className='btn btn-sm m-1'\r\n                      onClick={() => onClickView(student.id)}\r\n                    >\r\n                      <i className='fas fa-eye'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Finance;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Course.js",["286"],"import React from 'react';\r\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudents } from '../actions/students';\r\n\r\nconst Course = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudents());\r\n  }, []);\r\n  const students = useSelector((state) => state.students.students);\r\n  const onClickView = (id) => {\r\n    props.history.push(`/course/record/${id}`);\r\n  };\r\n  return (\r\n    <Row className='main-height'>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>All Students Courses</h3>\r\n        </Container>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>RegNo</th>\r\n              <th>Level</th>\r\n              <th>Course</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.map((student, index) => (\r\n              <tr key={student.id}>\r\n                <td>{index + 1}</td>\r\n                <td>{student.regNo}</td>\r\n                <td>{student.level}</td>\r\n                <td>\r\n                  {student.Course ? student.Course.name : 'Record Course'}\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    className='btn btn-sm m-1'\r\n                    onClick={() => onClickView(student.id)}\r\n                  >\r\n                    <i className='fas fa-eye'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\DefaultLayoutDashboard.js",["287","288","289"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport Card from './Card';\r\nimport { getUsers } from '../actions/users';\r\nimport { getRoles, assignRole } from '../actions/roles';\r\n\r\nconst DefaultDashboard = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const username = localStorage.getItem('username');\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n  React.useEffect(() => {\r\n    dispatch(getRoles());\r\n  }, []);\r\n  const users = useSelector((state) => state.users.users);\r\n  const roles = useSelector((state) => state.roles.roles);\r\n  const msg = useSelector((state) => state.roles.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\r\n  const [backErrs, setBackErrs] = React.useState('');\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    role: '',\r\n    email: '',\r\n  });\r\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\r\n  const [backMsg, setBackMsg] = React.useState('');\r\n  React.useEffect(() => {\r\n    setBackErrs(backErrors);\r\n    setTimeout(() => {\r\n      setBackErrs('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n  React.useEffect(() => {\r\n    setBackMsg(msg);\r\n    setTimeout(() => {\r\n      setBackMsg('');\r\n    }, 5000);\r\n  }, [msg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmmitting(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(assignRole(state));\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 5000);\r\n    }\r\n  }, [isSubmitting]);\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 5000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const HandleClickUsers = () => {\r\n    setTimeout(() => {\r\n      props.history.push('/dashboard');\r\n      window.location.reload(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const HandleClickStudents = () => {\r\n    setTimeout(() => {\r\n      props.history.push('/students');\r\n      window.location.reload(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const HandleClickSeats = () => {\r\n    setTimeout(() => {\r\n      props.history.push('/seat');\r\n      window.location.reload(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='back-color'>\r\n          Assign Role\r\n        </ModalHeader>\r\n        {backMsg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {backMsg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErrs ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErrs}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Role</Label>\r\n              <Input type='select' name='role' onChange={onChange}>\r\n                <option value=''>Select Role</option>\r\n                {roles.map((role) => (\r\n                  <option value={role.name} key={role.id}>\r\n                    {role.name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Email</Label>\r\n              <Input type='select' name='email' onChange={onChange}>\r\n                <option value=''>Select User Email</option>\r\n                {users.map((user) => (\r\n                  <option value={user.email} key={user.id}>\r\n                    {user.email}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='back-color'>\r\n            <Button color='secondary'>Assign</Button>\r\n            <Button color='danger' onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>Welcome, {username}</h3>\r\n          <h6 className='text-capitalize text-center'>\r\n            What do you want to do?\r\n          </h6>\r\n          <Container>\r\n            <Row>\r\n              <Card count={2} text='Users' onClick={HandleClickUsers} />\r\n              <Card count={4} text='Students' onClick={HandleClickStudents} />\r\n              <Card count={4} text='Seats' onClick={HandleClickSeats} />\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DefaultDashboard;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\FinanceRecord.js",["290","291"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from '../components/Sidebar';\r\nimport { getStudent } from '../actions/students';\r\nimport { record } from '../actions/finance';\r\n\r\nconst FinanceRecord = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudent(props.match.params.slug));\r\n  }, []);\r\n  const student = useSelector((state) => state.students.student);\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    amount: '',\r\n  });\r\n  const [backErr, setBackErr] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const backMsg = useSelector((state) => state.finance.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.finance.recordSuccess);\r\n\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setTimeout(() => {\r\n      setBackErr('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(record(state, props.match.params.slug));\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 6000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const { amount } = state;\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='background'>\r\n          Record Finance\r\n        </ModalHeader>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErr ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErr}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Amount</Label>\r\n              <Input\r\n                type='text'\r\n                placeholder='eg: 60000'\r\n                name='amount'\r\n                onChange={onChange}\r\n                value={amount}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='background'>\r\n            <Button className='btn btn-secondary'>Record</Button>\r\n            <Button className='btn btn-danger' onClick={toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>Single Student Financial Status</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Value</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{student.id}</td>\r\n                <td>{student.regNo}</td>\r\n                <td>{student.level}</td>\r\n                <td>\r\n                  {student.Course ? student.Course.name : 'Record Course'}\r\n                </td>\r\n                <td>\r\n                  {student.Finance ? student.Finance.amount : 'Record Finance'}\r\n                </td>\r\n                <td>\r\n                  {student.Finance ? student.Finance.status : 'No Record'}\r\n                </td>\r\n                <td>\r\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\r\n                    <i className='fas fa-edit'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default FinanceRecord;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\SeatRecord.js",["292","293"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport { getStudent } from '../actions/students';\r\nimport { assign } from '../actions/seat';\r\n\r\nconst SeatRecord = (props) => {\r\n  if (!localStorage.getItem('token')) {\r\n    props.history.push('/');\r\n  }\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getStudent(props.match.params.slug));\r\n  }, []);\r\n  const student = useSelector((state) => state.students.student);\r\n  const backMsg = useSelector((state) => state.seat.msg);\r\n  const backErrors = useSelector(\r\n    (state) => state.errors.msg.error || state.errors.msg.msg\r\n  );\r\n  const checkSuccess = useSelector((state) => state.seat.assignSuccess);\r\n  const [modal, setModal] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    seat: '',\r\n    room: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const [backErr, setBackErr] = React.useState('');\r\n  const [msg, setMsg] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    setBackErr(backErrors);\r\n    setTimeout(() => {\r\n      setBackErr('');\r\n    }, 5000);\r\n  }, [backErrors]);\r\n\r\n  React.useEffect(() => {\r\n    setMsg(backMsg);\r\n    setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n  }, [backMsg]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSubmitting) {\r\n      dispatch(assign(state, props.match.params.slug));\r\n    }\r\n  }, [isSubmitting]);\r\n\r\n  React.useEffect(() => {\r\n    if (checkSuccess) {\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 6000);\r\n    }\r\n  }, [checkSuccess]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Row className='main-height'>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className='background'>\r\n          Record Seat &#38;&#38; Room\r\n        </ModalHeader>\r\n        {msg ? (\r\n          <Alert color='success' className='text-center'>\r\n            {msg}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {backErr ? (\r\n          <Alert color='danger' className='text-center'>\r\n            {backErr}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Form onSubmit={onSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Room</Label>\r\n              <Input type='select' name='room' onChange={onChange}>\r\n                <option>Choose Room</option>\r\n                <option value='Muhabura'>Muhabura</option>\r\n                <option value='Kalisimbi'>Kalisimbi</option>\r\n                <option value='Gasabo'>Gasabo</option>\r\n                <option value='Jari'>Jari</option>\r\n                <option value='Jabana'>Jabana</option>\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Seat</Label>\r\n              <Input type='select' name='seat' onChange={onChange}>\r\n                <option>Choose Seat</option>\r\n                <option value='001'>001</option>\r\n                <option value='002'>002</option>\r\n                <option value='003'>003</option>\r\n                <option value='004'>004</option>\r\n                <option value='005'>005</option>\r\n                <option value='006'>006</option>\r\n                <option value='007'>007</option>\r\n                <option value='008'>008</option>\r\n                <option value='009'>009</option>\r\n                <option value='010'>010</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter className='background'>\r\n            <Button className='btn btn-secondary'>Record</Button>\r\n            <Button className='btn btn-danger' onClick={toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n      <Sidebar />\r\n      <Col md='9'>\r\n        <Container>\r\n          <h3 className='text-center'>Single Student With Seat</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>RegNo</th>\r\n                <th>Level</th>\r\n                <th>Course</th>\r\n                <th>Seat &#38;&#38; Room</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{student.id}</td>\r\n                <td>{student.regNo}</td>\r\n                <td>{student.level}</td>\r\n                <td>\r\n                  {student.Course ? student.Course.name : 'Record Course'}\r\n                </td>\r\n                <td>\r\n                  {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\r\n                  {student.Seat ? student.Seat.room : 'Room'}\r\n                </td>\r\n                <td>\r\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\r\n                    <i className='fas fa-edit'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SeatRecord;\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Image.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\validations\\login.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\components\\Card.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\errors\\index.js",["294"],"import { types } from '../../actions/errors/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n    case types.CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\users\\index.js",["295"],"import { types } from '../../actions/users/types';\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\finance\\index.js",["296"],"import { types } from '../../actions/finance/types';\r\n\r\nconst initialState = {\r\n  msg: '',\r\n  recordSuccess: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.RECORD_FINANCE:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        recordSuccess: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\auth\\index.js",["297"],"import { types } from '../../actions/auth/types';\r\n\r\nconst initialState = {\r\n  msg: '',\r\n  status: '',\r\n  token: '',\r\n  isAuthenticated: null,\r\n  registered: false,\r\n  user: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        registered: true,\r\n      };\r\n    case types.LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      localStorage.setItem('username', action.payload.user.name);\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        token: action.payload.token,\r\n        user: action.payload.user,\r\n        isAuthenticated: true,\r\n      };\r\n    case types.LOGOUT_SUCCESS:\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('username');\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        token: '',\r\n        user: {},\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\course\\index.js",["298"],"import { types } from '../../actions/course/types';\r\n\r\nconst initialState = {\r\n  msg: '',\r\n  recordSuccess: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.RECORD_COURSE:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        recordSuccess: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\roles\\index.js",["299"],"import { types } from '../../actions/roles/types';\r\n\r\nconst initialState = {\r\n  roles: [],\r\n  role: {},\r\n  msg: '',\r\n  assignSuccess: false,\r\n  deleteSuccess: false,\r\n  createSuccess: false,\r\n  updateSuccess: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_ROLES:\r\n      return {\r\n        ...state,\r\n        roles: action.payload.roles,\r\n      };\r\n    case types.GET_ROLE:\r\n      return {\r\n        ...state,\r\n        role: action.payload.role,\r\n      };\r\n    case types.ASSIGN_ROLE:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        assignSuccess: true,\r\n      };\r\n    case types.DELETE_ROLE:\r\n      return {\r\n        ...state,\r\n        roles: state.roles.filter((role) => role.id !== action.payload.id),\r\n        msg: action.payload.msg,\r\n        deleteSuccess: true,\r\n      };\r\n    case types.CREATE_ROLE:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        createSuccess: true,\r\n      };\r\n    case types.UPDATE_ROLE:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        updateSuccess: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\attendance\\index.js",["300"],"import { types } from '../../actions/attendance/types';\r\n\r\nconst initialState = {\r\n  msg: '',\r\n  recordSuccess: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.RECORD_ATTENDANCE:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        recordSuccess: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\seat\\index.js",["301"],"import { types } from '../../actions/seat/types';\r\n\r\nconst initialState = {\r\n  msg: '',\r\n  assignSuccess: '',\r\n  seat: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ASSIGN_SEAT:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        assignSuccess: true,\r\n      };\r\n    case types.VIEW_SEAT:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        seat: action.payload.seat,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\reducers\\students\\index.js",["302"],"import { types } from '../../actions/students/types';\r\n\r\nconst initialState = {\r\n  students: [],\r\n  student: {},\r\n  msg: '',\r\n  updateSuccess: false,\r\n  createSuccess: false,\r\n  deleteSuccess: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_STUDENTS:\r\n    case types.GET_STUDENTS_DEPT:\r\n      return {\r\n        ...state,\r\n        students: action.payload.students,\r\n      };\r\n    case types.GET_STUDENT:\r\n      return {\r\n        ...state,\r\n        student: action.payload.student,\r\n      };\r\n    case types.UPDATE_STUDENT:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        updateSuccess: true,\r\n      };\r\n    case types.CREATE_STUDENT:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        createSuccess: true,\r\n      };\r\n    case types.DELETE_STUDENT:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        deleteSuccess: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\validations\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\users\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\course\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\roles\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\attendance\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\students\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\finance\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\seat\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\auth\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\attendance\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\seat\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\roles\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\students\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\course\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\users\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\auth\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\finance\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\errors\\types.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\errors\\index.js",[],"C:\\Users\\Andela\\project\\kigc-esas-frontend\\src\\actions\\setUpAxios\\index.js",[],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":31,"column":6,"nodeType":"309","endLine":31,"endColumn":8,"suggestions":"310"},{"ruleId":"307","severity":1,"message":"308","line":34,"column":6,"nodeType":"309","endLine":34,"endColumn":8,"suggestions":"311"},{"ruleId":"307","severity":1,"message":"312","line":79,"column":6,"nodeType":"309","endLine":79,"endColumn":20,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":22,"column":9,"nodeType":"316","messageId":"317","endLine":22,"endColumn":12},{"ruleId":"307","severity":1,"message":"312","line":57,"column":6,"nodeType":"309","endLine":57,"endColumn":20,"suggestions":"318"},{"ruleId":"307","severity":1,"message":"319","line":63,"column":6,"nodeType":"309","endLine":63,"endColumn":14,"suggestions":"320"},{"ruleId":"307","severity":1,"message":"321","line":75,"column":6,"nodeType":"309","endLine":75,"endColumn":19,"suggestions":"322"},{"ruleId":"307","severity":1,"message":"319","line":60,"column":6,"nodeType":"309","endLine":60,"endColumn":14,"suggestions":"323"},{"ruleId":"307","severity":1,"message":"321","line":72,"column":6,"nodeType":"309","endLine":72,"endColumn":20,"suggestions":"324"},{"ruleId":"314","severity":1,"message":"325","line":21,"column":44,"nodeType":"316","messageId":"317","endLine":21,"endColumn":51},{"ruleId":"307","severity":1,"message":"308","line":30,"column":6,"nodeType":"309","endLine":30,"endColumn":8,"suggestions":"326"},{"ruleId":"307","severity":1,"message":"312","line":91,"column":6,"nodeType":"309","endLine":91,"endColumn":20,"suggestions":"327"},{"ruleId":"307","severity":1,"message":"308","line":22,"column":6,"nodeType":"309","endLine":22,"endColumn":19,"suggestions":"328"},{"ruleId":"307","severity":1,"message":"308","line":15,"column":6,"nodeType":"309","endLine":15,"endColumn":8,"suggestions":"329"},{"ruleId":"307","severity":1,"message":"308","line":45,"column":6,"nodeType":"309","endLine":45,"endColumn":8,"suggestions":"330"},{"ruleId":"307","severity":1,"message":"331","line":85,"column":6,"nodeType":"309","endLine":85,"endColumn":22,"suggestions":"332"},{"ruleId":"307","severity":1,"message":"312","line":108,"column":6,"nodeType":"309","endLine":108,"endColumn":20,"suggestions":"333"},{"ruleId":"307","severity":1,"message":"334","line":31,"column":6,"nodeType":"309","endLine":31,"endColumn":8,"suggestions":"335"},{"ruleId":"307","severity":1,"message":"336","line":74,"column":6,"nodeType":"309","endLine":74,"endColumn":20,"suggestions":"337"},{"ruleId":"307","severity":1,"message":"334","line":30,"column":6,"nodeType":"309","endLine":30,"endColumn":8,"suggestions":"338"},{"ruleId":"307","severity":1,"message":"339","line":86,"column":6,"nodeType":"309","endLine":86,"endColumn":20,"suggestions":"340"},{"ruleId":"307","severity":1,"message":"308","line":15,"column":6,"nodeType":"309","endLine":15,"endColumn":8,"suggestions":"341"},{"ruleId":"314","severity":1,"message":"342","line":22,"column":8,"nodeType":"316","messageId":"317","endLine":22,"endColumn":15},{"ruleId":"307","severity":1,"message":"334","line":31,"column":6,"nodeType":"309","endLine":31,"endColumn":8,"suggestions":"343"},{"ruleId":"307","severity":1,"message":"339","line":89,"column":6,"nodeType":"309","endLine":89,"endColumn":20,"suggestions":"344"},{"ruleId":"307","severity":1,"message":"334","line":31,"column":6,"nodeType":"309","endLine":31,"endColumn":8,"suggestions":"345"},{"ruleId":"307","severity":1,"message":"336","line":74,"column":6,"nodeType":"309","endLine":74,"endColumn":20,"suggestions":"346"},{"ruleId":"307","severity":1,"message":"308","line":15,"column":6,"nodeType":"309","endLine":15,"endColumn":8,"suggestions":"347"},{"ruleId":"307","severity":1,"message":"308","line":15,"column":6,"nodeType":"309","endLine":15,"endColumn":8,"suggestions":"348"},{"ruleId":"307","severity":1,"message":"308","line":32,"column":6,"nodeType":"309","endLine":32,"endColumn":8,"suggestions":"349"},{"ruleId":"307","severity":1,"message":"308","line":35,"column":6,"nodeType":"309","endLine":35,"endColumn":8,"suggestions":"350"},{"ruleId":"307","severity":1,"message":"312","line":80,"column":6,"nodeType":"309","endLine":80,"endColumn":20,"suggestions":"351"},{"ruleId":"307","severity":1,"message":"334","line":31,"column":6,"nodeType":"309","endLine":31,"endColumn":8,"suggestions":"352"},{"ruleId":"307","severity":1,"message":"336","line":74,"column":6,"nodeType":"309","endLine":74,"endColumn":20,"suggestions":"353"},{"ruleId":"307","severity":1,"message":"334","line":31,"column":6,"nodeType":"309","endLine":31,"endColumn":8,"suggestions":"354"},{"ruleId":"307","severity":1,"message":"336","line":75,"column":6,"nodeType":"309","endLine":75,"endColumn":20,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":23,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":7,"column":1,"nodeType":"358","endLine":18,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":20,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":12,"column":1,"nodeType":"358","endLine":43,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":20,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":13,"column":1,"nodeType":"358","endLine":53,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":19,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":9,"column":1,"nodeType":"358","endLine":26,"endColumn":3},{"ruleId":"356","severity":1,"message":"357","line":12,"column":1,"nodeType":"358","endLine":46,"endColumn":3},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["361"],["362"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["363"],"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar",["364"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'isSubmitting', and 'state'. Either include them or remove the dependency array.",["365"],"React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["366"],["367"],["368"],"'getRole' is defined but never used.",["369"],["370"],["371"],["372"],["373"],"React Hook React.useEffect has missing dependencies: 'dept' and 'dispatch'. Either include them or remove the dependency array.",["374"],["375"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'props.match.params.slug'. Either include them or remove the dependency array.",["376"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'props.match.params.slug', and 'state'. Either include them or remove the dependency array.",["377"],["378"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'state'. Either include them or remove the dependency array.",["379"],["380"],"'Student' is defined but never used.",["381"],["382"],["383"],["384"],["385"],["386"],["387"],["388"],["389"],["390"],["391"],["392"],["393"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"394","fix":"395"},{"desc":"394","fix":"396"},{"desc":"397","fix":"398"},{"desc":"397","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"400","fix":"404"},{"desc":"405","fix":"406"},{"desc":"394","fix":"407"},{"desc":"397","fix":"408"},{"desc":"409","fix":"410"},{"desc":"394","fix":"411"},{"desc":"394","fix":"412"},{"desc":"413","fix":"414"},{"desc":"397","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"416","fix":"420"},{"desc":"421","fix":"422"},{"desc":"394","fix":"423"},{"desc":"416","fix":"424"},{"desc":"421","fix":"425"},{"desc":"416","fix":"426"},{"desc":"418","fix":"427"},{"desc":"394","fix":"428"},{"desc":"394","fix":"429"},{"desc":"394","fix":"430"},{"desc":"394","fix":"431"},{"desc":"397","fix":"432"},{"desc":"416","fix":"433"},{"desc":"418","fix":"434"},{"desc":"416","fix":"435"},{"desc":"418","fix":"436"},"Update the dependencies array to be: [dispatch]",{"range":"437","text":"438"},{"range":"439","text":"438"},"Update the dependencies array to be: [dispatch, isSubmitting, state]",{"range":"440","text":"441"},{"range":"442","text":"441"},"Update the dependencies array to be: [dispatch, errors, isSubmitting, state]",{"range":"443","text":"444"},"Update the dependencies array to be: [checkIsAuth, props.history]",{"range":"445","text":"446"},{"range":"447","text":"444"},"Update the dependencies array to be: [checkSuccess, props.history]",{"range":"448","text":"449"},{"range":"450","text":"438"},{"range":"451","text":"441"},"Update the dependencies array to be: [dispatch, isLoggedOut]",{"range":"452","text":"453"},{"range":"454","text":"438"},{"range":"455","text":"438"},"Update the dependencies array to be: [dept, dispatch, isCheckingDept]",{"range":"456","text":"457"},{"range":"458","text":"441"},"Update the dependencies array to be: [dispatch, props.match.params.slug]",{"range":"459","text":"460"},"Update the dependencies array to be: [dispatch, isSubmitting, props.match.params.slug, state]",{"range":"461","text":"462"},{"range":"463","text":"460"},"Update the dependencies array to be: [dispatch, id, isSubmitting, state]",{"range":"464","text":"465"},{"range":"466","text":"438"},{"range":"467","text":"460"},{"range":"468","text":"465"},{"range":"469","text":"460"},{"range":"470","text":"462"},{"range":"471","text":"438"},{"range":"472","text":"438"},{"range":"473","text":"438"},{"range":"474","text":"438"},{"range":"475","text":"441"},{"range":"476","text":"460"},{"range":"477","text":"462"},{"range":"478","text":"460"},{"range":"479","text":"462"},[621,623],"[dispatch]",[686,688],[2018,2032],"[dispatch, isSubmitting, state]",[1350,1364],[1583,1591],"[dispatch, errors, isSubmitting, state]",[1872,1885],"[checkIsAuth, props.history]",[1595,1603],[1854,1868],"[checkSuccess, props.history]",[591,593],[2182,2196],[628,641],"[dispatch, isLoggedOut]",[447,449],[1054,1056],[2042,2058],"[dept, dispatch, isCheckingDept]",[2535,2549],[649,651],"[dispatch, props.match.params.slug]",[1862,1876],"[dispatch, isSubmitting, props.match.params.slug, state]",[597,599],[2058,2072],"[dispatch, id, isSubmitting, state]",[441,443],[646,648],[2238,2252],[641,643],[1840,1854],[444,446],[443,445],[700,702],[765,767],[2097,2111],[655,657],[1858,1872],[637,639],[1847,1861]]