[{"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/index.js":"1","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/App.js":"2","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/store.js":"3","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/Routes/index.js":"4","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/index.js":"5","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/HomePage.js":"6","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/RoleSingle.js":"7","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Login.js":"8","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Finance.js":"9","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/StudentSingle.js":"10","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Attendance.js":"11","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Student.js":"12","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Dashboard.js":"13","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/AttendanceRecord.js":"14","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Course.js":"15","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/CourseRecord.js":"16","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Header.js":"17","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/FinanceRecord.js":"18","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Role.js":"19","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Seat.js":"20","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Signup.js":"21","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/SeatRecord.js":"22","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Footer.js":"23","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Image.js":"24","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Sidebar.js":"25","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/login.js":"26","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/course/index.js":"27","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/auth/index.js":"28","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/finance/index.js":"29","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/attendance/index.js":"30","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/users/index.js":"31","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/roles/index.js":"32","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/students/index.js":"33","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/errors/index.js":"34","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/seat/index.js":"35","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/index.js":"36","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/index.js":"37","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/index.js":"38","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/index.js":"39","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/index.js":"40","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/index.js":"41","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/index.js":"42","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/index.js":"43","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/index.js":"44","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/types.js":"45","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/types.js":"46","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/types.js":"47","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/types.js":"48","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/types.js":"49","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/types.js":"50","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/types.js":"51","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/types.js":"52","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/types.js":"53","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/index.js":"54","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/setUpAxios/index.js":"55","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/DefaultLayoutDashboard.js":"56","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Card.js":"57","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Room.js":"58","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/course.js":"59","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/room/index.js":"60","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/index.js":"61","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/types.js":"62","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/room.js":"63"},{"size":146,"mtime":1617086707682,"results":"64","hashOfConfig":"65"},{"size":294,"mtime":1617086707672,"results":"66","hashOfConfig":"65"},{"size":369,"mtime":1617086707685,"results":"67","hashOfConfig":"65"},{"size":2474,"mtime":1619456074760,"results":"68","hashOfConfig":"65"},{"size":488,"mtime":1619456074770,"results":"69","hashOfConfig":"65"},{"size":3127,"mtime":1619458893564,"results":"70","hashOfConfig":"65"},{"size":4218,"mtime":1617086707681,"results":"71","hashOfConfig":"65"},{"size":3883,"mtime":1619456074767,"results":"72","hashOfConfig":"65"},{"size":2206,"mtime":1617086707679,"results":"73","hashOfConfig":"65"},{"size":5579,"mtime":1619456074768,"results":"74","hashOfConfig":"65"},{"size":2229,"mtime":1617086707678,"results":"75","hashOfConfig":"65"},{"size":8054,"mtime":1619456074768,"results":"76","hashOfConfig":"65"},{"size":4844,"mtime":1617086707679,"results":"77","hashOfConfig":"65"},{"size":4581,"mtime":1617086707678,"results":"78","hashOfConfig":"65"},{"size":7187,"mtime":1619456074762,"results":"79","hashOfConfig":"65"},{"size":6478,"mtime":1619456074763,"results":"80","hashOfConfig":"65"},{"size":1620,"mtime":1617086707679,"results":"81","hashOfConfig":"65"},{"size":4485,"mtime":1617086707679,"results":"82","hashOfConfig":"65"},{"size":5314,"mtime":1617086707680,"results":"83","hashOfConfig":"65"},{"size":2082,"mtime":1617086707681,"results":"84","hashOfConfig":"65"},{"size":4588,"mtime":1619456074767,"results":"85","hashOfConfig":"65"},{"size":5291,"mtime":1617086707681,"results":"86","hashOfConfig":"65"},{"size":215,"mtime":1617086707679,"results":"87","hashOfConfig":"65"},{"size":180,"mtime":1617086707680,"results":"88","hashOfConfig":"65"},{"size":1637,"mtime":1619459249342,"results":"89","hashOfConfig":"65"},{"size":251,"mtime":1617086707690,"results":"90","hashOfConfig":"65"},{"size":1195,"mtime":1619456074770,"results":"91","hashOfConfig":"65"},{"size":1015,"mtime":1617086707683,"results":"92","hashOfConfig":"65"},{"size":368,"mtime":1617086707684,"results":"93","hashOfConfig":"65"},{"size":373,"mtime":1617086707683,"results":"94","hashOfConfig":"65"},{"size":314,"mtime":1617086707685,"results":"95","hashOfConfig":"65"},{"size":1138,"mtime":1617086707684,"results":"96","hashOfConfig":"65"},{"size":976,"mtime":1617086707684,"results":"97","hashOfConfig":"65"},{"size":438,"mtime":1617086707683,"results":"98","hashOfConfig":"65"},{"size":506,"mtime":1617086707684,"results":"99","hashOfConfig":"65"},{"size":320,"mtime":1617086707690,"results":"100","hashOfConfig":"65"},{"size":1967,"mtime":1617086707674,"results":"101","hashOfConfig":"65"},{"size":1988,"mtime":1617086707675,"results":"102","hashOfConfig":"65"},{"size":1019,"mtime":1617086707673,"results":"103","hashOfConfig":"65"},{"size":433,"mtime":1617086707674,"results":"104","hashOfConfig":"65"},{"size":445,"mtime":1617086707673,"results":"105","hashOfConfig":"65"},{"size":1670,"mtime":1619456074761,"results":"106","hashOfConfig":"65"},{"size":722,"mtime":1617086707675,"results":"107","hashOfConfig":"65"},{"size":401,"mtime":1617086707676,"results":"108","hashOfConfig":"65"},{"size":83,"mtime":1617086707675,"results":"109","hashOfConfig":"65"},{"size":238,"mtime":1617086707676,"results":"110","hashOfConfig":"65"},{"size":68,"mtime":1617086707673,"results":"111","hashOfConfig":"65"},{"size":52,"mtime":1617086707676,"results":"112","hashOfConfig":"65"},{"size":221,"mtime":1619456074761,"results":"113","hashOfConfig":"65"},{"size":196,"mtime":1617086707675,"results":"114","hashOfConfig":"65"},{"size":196,"mtime":1617086707673,"results":"115","hashOfConfig":"65"},{"size":62,"mtime":1617086707674,"results":"116","hashOfConfig":"65"},{"size":86,"mtime":1617086707674,"results":"117","hashOfConfig":"65"},{"size":240,"mtime":1617086707674,"results":"118","hashOfConfig":"65"},{"size":321,"mtime":1617117425169,"results":"119","hashOfConfig":"65"},{"size":5196,"mtime":1619456074765,"results":"120","hashOfConfig":"65"},{"size":594,"mtime":1618212125578,"results":"121","hashOfConfig":"65"},{"size":9986,"mtime":1619459106123,"results":"122","hashOfConfig":"65"},{"size":410,"mtime":1619456074771,"results":"123","hashOfConfig":"65"},{"size":770,"mtime":1619456074770,"results":"124","hashOfConfig":"65"},{"size":1061,"mtime":1619456074761,"results":"125","hashOfConfig":"65"},{"size":211,"mtime":1619456074762,"results":"126","hashOfConfig":"65"},{"size":273,"mtime":1619456074771,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"xavob8",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"130"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"130"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/index.js",[],["281","282"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/App.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/store.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/Routes/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/HomePage.js",["283","284"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/RoleSingle.js",["285","286"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getRole, updateRole } from '../actions/roles';\n\nconst RoleSingle = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getRole(props.match.params.slug));\n  }, []);\n  const role = useSelector((state) => state.roles.role);\n  const backMsg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.updateSuccess);\n  const [state, setState] = React.useState({\n    id: '',\n    name: '',\n    description: '',\n  });\n  const [modal, setModal] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  React.useEffect(() => {\n    if (Object.keys(role).length !== 0) {\n      setState({\n        id: role.id,\n        name: role.name,\n        description: role.description,\n      });\n    }\n  }, [role]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const { id, name, description } = state;\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(updateRole(state, id));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Update Role\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type='text'\n                name='description'\n                onChange={onChange}\n                value={description}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Update</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Role</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{role.name}</td>\n                <td>{role.description}</td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default RoleSingle;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Login.js",["287","288"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { loginUser } from '../actions/auth';\nimport Image from './Image';\nimport validation from '../validations/login';\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const backMsg = useSelector((state) => state.auth.msg);\n  const checkIsAuth = useSelector((state) => state.auth.isAuthenticated);\n\n  const [backErrs, setBackErrs] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [state, setState] = React.useState({\n    email: '',\n    password: '',\n  });\n\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validation(state));\n    setIsSubmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting && Object.keys(errors).length === 0) {\n      dispatch(loginUser(state));\n    }\n  }, [errors]);\n  React.useEffect(() => {\n    if (checkIsAuth) {\n      setTimeout(() => {\n        setState({\n          email: '',\n          password: '',\n        });\n        props.history.push('/default-dashboard');\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkIsAuth]);\n  const { email, password } = state;\n  const { emailErrors, passwordErrors } = errors;\n  return (\n    <Row className='main-height'>\n      <Image />\n      <Col md='6' className='back-color border p-2'>\n        <h3 className='text-center'>\n          Login To <br />\n          KIGC-ESAS\n        </h3>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <hr />\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type='text'\n              name='email'\n              onChange={onChange}\n              value={email}\n              placeholder='eg: dushimeemma@gmail.com'\n              className={emailErrors ? 'border-danger' : 'border-success'}\n            />\n            {emailErrors ? (\n              <Alert className='alert alert-danger background'>\n                {emailErrors}\n              </Alert>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              onChange={onChange}\n              value={password}\n              placeholder='eg: Password123'\n              className={passwordErrors ? 'border-danger' : 'border-success'}\n            />\n            {passwordErrors ? (\n              <Alert className='alert alert-danger background'>\n                {passwordErrors}\n              </Alert>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <Button className='btn btn-block'>Login</Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Finance.js",["289"],"import React from 'react';\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Finance = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/finance/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Financial Status</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    {student.Course ? student.Course.name : 'Record Course'}\n                  </td>\n                  <td>\n                    {student.Finance\n                      ? student.Finance.amount\n                      : 'Record Finance'}\n                    Rwfs\n                  </td>\n                  <td>\n                    {student.Finance ? student.Finance.status : 'No Record'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Finance;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/StudentSingle.js",["290","291"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent, updateStudent } from '../actions/students';\n\nconst StudentSingle = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const backMsg = useSelector((state) => state.students.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.students.updateSuccess);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    id: '',\n    regNo: '',\n    name: '',\n    department: '',\n    level: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  React.useEffect(() => {\n    if (Object.keys(student).length > 0) {\n      setState({\n        id: student.id,\n        regNo: student.regNo,\n        name: student.name,\n        department: student.department,\n        level: student.level,\n      });\n    }\n  }, [student]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n  const { id, regNo, name, department, level } = state;\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(updateStudent(state, id));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Update Student\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Reg No</Label>\n              <Input\n                type='text'\n                name='regNo'\n                onChange={onChange}\n                value={regNo}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Department</Label>\n              <Input\n                type='text'\n                name='department'\n                onChange={onChange}\n                value={department}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Level</Label>\n              <Input\n                type='text'\n                name='level'\n                onChange={onChange}\n                value={level}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Update</Button>\n            <Button onClick={toggle} className='btn btn-danger'>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Name</th>\n                <th>Department</th>\n                <th>Level</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.name}</td>\n                <td>{student.regNo}</td>\n                <td>{student.name}</td>\n                <td>{student.department}</td>\n                <td>{student.level}</td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default StudentSingle;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Attendance.js",["292"],"import React from 'react';\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Attendance = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickRecord = (id) => {\n    props.history.push(`/attendance/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Attendance</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>{student.Course ? student.Course.name : 'No course'}</td>\n                  <td>\n                    {student.Attendance\n                      ? student.Attendance.percentage\n                      : 'Record Attandance'}\n                    %\n                  </td>\n                  <td>\n                    {student.Attendance\n                      ? student.Attendance.status\n                      : 'No record'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickRecord(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Attendance;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Student.js",["293","294","295"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n  Input,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport {\n  getStudents,\n  createStudent,\n  deleteStudent,\n  getStudentsPerDept,\n} from '../actions/students';\n\nconst Student = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  const students = useSelector((state) => state.students.students);\n  const backMsg = useSelector((state) => state.students.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.students.createSuccess);\n  const checkDeleteSuccess = useSelector(\n    (state) => state.students.deleteSuccess\n  );\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const [state, setState] = React.useState({\n    regNo: '',\n    name: '',\n    department: '',\n    level: '',\n  });\n  const [dept, setDept] = React.useState({\n    department: '',\n    level: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isCheckingDept, setIsCheckingDept] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onChangeDept = (e) => {\n    const { name, value } = e.target;\n    setDept({ ...dept, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const onSUbmitDept = (e) => {\n    e.preventDefault();\n    setIsCheckingDept(true);\n  };\n\n  React.useEffect(() => {\n    if (isCheckingDept) {\n      dispatch(getStudentsPerDept(dept));\n    }\n  }, [isCheckingDept]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(createStudent(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const [modal, setModal] = React.useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onClickView = (id) => {\n    props.history.push(`/student/${id}`);\n  };\n\n  const onClickDelete = (id) => {\n    dispatch(deleteStudent(id));\n  };\n\n  React.useEffect(() => {\n    if (checkDeleteSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkDeleteSuccess]);\n\n  const { regNo, name, department, level } = state;\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Create Student\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Reg No</Label>\n              <Input\n                type='text'\n                name='regNo'\n                onChange={onChange}\n                value={regNo}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Department</Label>\n              <Input\n                type='text'\n                name='department'\n                onChange={onChange}\n                value={department}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Level</Label>\n              <Input\n                type='text'\n                name='level'\n                onChange={onChange}\n                value={level}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Create</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Row>\n          <Col md='3'>\n            <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\n              Create Student\n            </Button>\n          </Col>\n          <Col md='9'>\n            <Form inline onSubmit={onSUbmitDept}>\n              <Input\n                type='select'\n                name='department'\n                placeholder='department'\n                className='m-1'\n                onChange={onChangeDept}\n              >\n                <option>CHOOSE DEPTERTMENT</option>\n                <option value='BCS'>BCS</option>\n                <option value='BIT'>BIT</option>\n                <option value='BBIT'>BBIT</option>\n              </Input>\n              <Input\n                type='select'\n                name='level'\n                placeholder='level'\n                className='m-1'\n                onChange={onChangeDept}\n              >\n                <option>CHOOSE LEVEL</option>\n                <option value='1'>ONE</option>\n                <option value='2'>TWO</option>\n                <option value='3'>THREE</option>\n              </Input>\n              <Button className='btn btn-secondary m-1'>VIEW</Button>\n            </Form>\n          </Col>\n        </Row>\n        <Container>\n          <h3 className='text-center'>All Students</h3>\n          {msg ? (\n            <Alert color='success' className='text-center'>\n              {msg}\n            </Alert>\n          ) : (\n            ''\n          )}\n          {backErr ? (\n            <Alert color='danger' className='text-center'>\n              {backErr}\n            </Alert>\n          ) : (\n            ''\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo.</th>\n                <th>Name</th>\n                <th>Department</th>\n                <th>Level</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.name}</td>\n                  <td>{student.department}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickDelete(student.id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Student;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Dashboard.js",["296","297","298"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getUsers } from '../actions/users';\nimport { getRoles, assignRole } from '../actions/roles';\n\nconst Dashboard = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n  const users = useSelector((state) => state.users.users);\n  const roles = useSelector((state) => state.roles.roles);\n  const msg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\n  const [backErrs, setBackErrs] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    role: '',\n    email: '',\n  });\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\n  const [backMsg, setBackMsg] = React.useState('');\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    setBackMsg(msg);\n    setTimeout(() => {\n      setBackMsg('');\n    }, 5000);\n  }, [msg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assignRole(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [isSubmitting]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Assign Role\n        </ModalHeader>\n        {backMsg ? (\n          <Alert color='success' className='text-center'>\n            {backMsg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Role</Label>\n              <Input type='select' name='role' onChange={onChange}>\n                <option value=''>Select Role</option>\n                {roles.map((role) => (\n                  <option value={role.name} key={role.id}>\n                    {role.name}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input type='select' name='email' onChange={onChange}>\n                <option value=''>Select User Email</option>\n                {users.map((user) => (\n                  <option value={user.email} key={user.id}>\n                    {user.email}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Assign</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Users And Roles</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Role</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, index) => (\n                <tr key={user.id}>\n                  <td>{index + 1}</td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>{user.Role ? user.Role.name : 'No Role'}</td>\n                  <td>\n                    <Button className='btn btn-sm' onClick={toggle}>\n                      <i className='fas fa-user-edit'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Dashboard;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/AttendanceRecord.js",["299","300"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/attendance';\n\nconst AttendanceRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    percentage: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.attendance.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.attendance.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { percentage } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Attendance\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Percentage</Label>\n              <Input\n                type='text'\n                name='percentage'\n                placeholder='eg: 85'\n                onChange={onChange}\n                value={percentage}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Attendance</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Attendance\n                    ? student.Attendance.percentage\n                    : 'Record Attendance'}\n                  %\n                </td>\n                <td>\n                  {student.Attendance ? student.Attendance.status : 'No Record'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default AttendanceRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Course.js",["301"],"import React from 'react';\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Course = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/course/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Courses</h3>\n        </Container>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>RegNo</th>\n              <th>Level</th>\n              <th>Course</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {students.map((student, index) => (\n              <tr key={student.id}>\n                <td>{index + 1}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  <Button\n                    className='btn btn-sm m-1'\n                    onClick={() => onClickView(student.id)}\n                  >\n                    <i className='fas fa-eye'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Course;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/CourseRecord.js",["302","303"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/course';\n\nconst CourseRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.course.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.course.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { name } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Course\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type='text'\n                name='name'\n                placeholder='eg: JavaScript'\n                onChange={onChange}\n                value={name}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Course</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CourseRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Header.js",["304"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navbar, NavbarBrand, Nav, NavLink, NavItem } from 'reactstrap';\n\nimport './styles.scss';\nimport { logout } from '../actions/auth';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const username = localStorage.getItem('username');\n  const [isLoggedOut, setIsLoggedOut] = React.useState(false);\n  const onClick = () => {\n    setIsLoggedOut(true);\n  };\n  React.useEffect(() => {\n    if (isLoggedOut) {\n      dispatch(logout());\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 3000);\n    }\n  }, [isLoggedOut]);\n  const guestLink = (\n    <Nav className='ml-auto'>\n      <NavItem>\n        <NavLink href='/login' className='text-color'>\n          Login\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='/register' className='text-color'>\n          Register\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n  const authLink = (\n    <Nav className='ml-auto'>\n      <NavItem>\n        <NavLink href='/dashboard' className='text-color'>\n          Welcome <strong className='text-capitalize'>{username}</strong>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          onClick={onClick}\n          className='text-color cursor-pointer'\n          id='logout'\n        >\n          Logout\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n  return (\n    <Navbar className='back-color mb-2'>\n      <NavbarBrand href='/' className='text-color'>\n        KIGC | ESAS\n      </NavbarBrand>\n      {username ? authLink : guestLink}\n    </Navbar>\n  );\n};\n\nexport default Header;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/FinanceRecord.js",["305","306"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from '../components/Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/finance';\n\nconst FinanceRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    amount: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.finance.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.finance.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { amount } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Finance\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Amount</Label>\n              <Input\n                type='text'\n                placeholder='eg: 60000'\n                name='amount'\n                onChange={onChange}\n                value={amount}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Financial Status</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Finance ? student.Finance.amount : 'Record Finance'}\n                </td>\n                <td>\n                  {student.Finance ? student.Finance.status : 'No Record'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default FinanceRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Role.js",["307","308","309"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getRoles, deleteRole, createRole, getRole } from '../actions/roles';\n\nconst Role = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n\n  const roles = useSelector((state) => state.roles.roles);\n  const deleteSuccess = useSelector((state) => state.roles.deleteSuccess);\n  const backMsg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.createSuccess);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n    description: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onClickDelete = (id) => {\n    dispatch(deleteRole(id));\n  };\n\n  const onClickView = (id) => {\n    props.history.push(`/role/${id}`);\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (deleteSuccess) {\n        window.location.reload(false);\n      }\n    }, 6000);\n  }, [deleteSuccess]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(createRole(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (checkSuccess) {\n        window.location.reload(false);\n      }\n    }, 6000);\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { name, description } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Create New Role\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type='text'\n                name='description'\n                onChange={onChange}\n                value={description}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Create</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n\n      <Sidebar />\n\n      <Col md='9'>\n        <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\n          Create Role\n        </Button>\n        <Container>\n          <h3 className='text-center'>All Roles</h3>\n          {msg ? (\n            <Alert color='success' className='text-center'>\n              {msg}\n            </Alert>\n          ) : (\n            ''\n          )}\n          {backErr ? (\n            <Alert color='danger' className='text-center'>\n              {backErr}\n            </Alert>\n          ) : (\n            ''\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {roles.map((role, index) => (\n                <tr key={role.id}>\n                  <td>{index + 1}</td>\n                  <td>{role.name}</td>\n                  <td>{role.description}</td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(role.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickDelete(role.id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Role;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Seat.js",["310"],"import React from 'react';\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Seat = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/seat/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>\n            All Students With Their Respective Seats\n          </h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Seat &#38;&#38; Room</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    {student.Course ? student.Course.name : 'Record Course'}\n                  </td>\n                  <td>\n                    {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\n                    {student.Seat ? student.Seat.room : 'Room'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Seat;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Signup.js",["311","312"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n} from 'reactstrap';\n\nimport { createUser } from '../actions/auth';\nimport Image from '../components/Image';\nimport validation from '../validations';\n\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n  const backMsg = useSelector((state) => state.auth.msg);\n  const checkSuccess = useSelector((state) => state.auth.registered);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const [backErrs, setBackErrs] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = React.useState({});\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validation(state));\n    setIsSubmitting(true);\n  };\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    if (isSubmitting && Object.keys(errors).length === 0) {\n      dispatch(createUser(state));\n    }\n  }, [errors]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        setState({\n          name: '',\n          email: '',\n          password: '',\n        });\n        props.history.push('/login');\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const { name, email, password } = state;\n  const { nameErrors, emailErrors, passwordErrors } = errors;\n  return (\n    <Row className='main-height'>\n      <Col md='6' className='back-color border p-2'>\n        <h3 className='text-center'>\n          Create New Account <br /> To KIGC-ESAS\n        </h3>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <hr />\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Label>Name</Label>\n            <Input\n              type='text'\n              name='name'\n              placeholder='eg: Emma Dushime'\n              onChange={onChange}\n              value={name}\n              className={nameErrors ? 'border-danger' : 'border-success'}\n            />\n            {nameErrors ? (\n              <Label className='alert alert-danger background'>\n                {nameErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type='text'\n              name='email'\n              placeholder='eg: dushimeemma@gmail.com'\n              onChange={onChange}\n              value={email}\n              className={emailErrors ? 'border-danger' : 'border-success'}\n            />\n            {emailErrors ? (\n              <Label className='alert alert-danger background'>\n                {emailErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              placeholder='eg: Password123'\n              onChange={onChange}\n              value={password}\n              className={passwordErrors ? 'border-danger' : 'border-success'}\n            />\n            {passwordErrors ? (\n              <Label className='alert alert-danger background'>\n                {passwordErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <Button className='btn btn-block'>Register</Button>\n        </Form>\n      </Col>\n      <Image />\n    </Row>\n  );\n};\n\nexport default Signup;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/SeatRecord.js",["313","314"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { assign } from '../actions/seat';\n\nconst SeatRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const backMsg = useSelector((state) => state.seat.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.seat.assignSuccess);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    seat: '',\n    room: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assign(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Seat &#38;&#38; Room\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Room</Label>\n              <Input type='select' name='room' onChange={onChange}>\n                <option>Choose Room</option>\n                <option value='Muhabura'>Muhabura</option>\n                <option value='Kalisimbi'>Kalisimbi</option>\n                <option value='Gasabo'>Gasabo</option>\n                <option value='Jari'>Jari</option>\n                <option value='Jabana'>Jabana</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Seat</Label>\n              <Input type='select' name='seat' onChange={onChange}>\n                <option>Choose Seat</option>\n                <option value='001'>001</option>\n                <option value='002'>002</option>\n                <option value='003'>003</option>\n                <option value='004'>004</option>\n                <option value='005'>005</option>\n                <option value='006'>006</option>\n                <option value='007'>007</option>\n                <option value='008'>008</option>\n                <option value='009'>009</option>\n                <option value='010'>010</option>\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student With Seat</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Seat &#38;&#38; Room</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\n                  {student.Seat ? student.Seat.room : 'Room'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SeatRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Footer.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Image.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Sidebar.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/login.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/course/index.js",["315"],"import { types } from '../../actions/course/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_COURSE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/auth/index.js",["316"],"import { types } from '../../actions/auth/types';\n\nconst initialState = {\n  msg: '',\n  status: '',\n  token: '',\n  isAuthenticated: null,\n  registered: false,\n  user: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.REGISTER_SUCCESS:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        registered: true,\n      };\n    case types.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('username', action.payload.user.name);\n      return {\n        ...state,\n        msg: action.payload.msg,\n        token: action.payload.token,\n        user: action.payload.user,\n        isAuthenticated: true,\n      };\n    case types.LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      return {\n        ...state,\n        msg: action.payload.msg,\n        token: '',\n        user: {},\n        isAuthenticated: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/finance/index.js",["317"],"import { types } from '../../actions/finance/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_FINANCE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/attendance/index.js",["318"],"import { types } from '../../actions/attendance/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_ATTENDANCE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/users/index.js",["319"],"import { types } from '../../actions/users/types';\n\nconst initialState = {\n  users: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload.users,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/roles/index.js",["320"],"import { types } from '../../actions/roles/types';\n\nconst initialState = {\n  roles: [],\n  role: {},\n  msg: '',\n  assignSuccess: false,\n  deleteSuccess: false,\n  createSuccess: false,\n  updateSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_ROLES:\n      return {\n        ...state,\n        roles: action.payload.roles,\n      };\n    case types.GET_ROLE:\n      return {\n        ...state,\n        role: action.payload.role,\n      };\n    case types.ASSIGN_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        assignSuccess: true,\n      };\n    case types.DELETE_ROLE:\n      return {\n        ...state,\n        roles: state.roles.filter((role) => role.id !== action.payload.id),\n        msg: action.payload.msg,\n        deleteSuccess: true,\n      };\n    case types.CREATE_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        createSuccess: true,\n      };\n    case types.UPDATE_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        updateSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/students/index.js",["321"],"import { types } from '../../actions/students/types';\n\nconst initialState = {\n  students: [],\n  student: {},\n  msg: '',\n  updateSuccess: false,\n  createSuccess: false,\n  deleteSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_STUDENTS:\n    case types.GET_STUDENTS_DEPT:\n      return {\n        ...state,\n        students: action.payload.students,\n      };\n    case types.GET_STUDENT:\n      return {\n        ...state,\n        student: action.payload.student,\n      };\n    case types.UPDATE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        updateSuccess: true,\n      };\n    case types.CREATE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        createSuccess: true,\n      };\n    case types.DELETE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        deleteSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/errors/index.js",["322"],"import { types } from '../../actions/errors/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    case types.CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/seat/index.js",["323"],"import { types } from '../../actions/seat/types';\n\nconst initialState = {\n  msg: '',\n  assignSuccess: '',\n  seat: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ASSIGN_SEAT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        assignSuccess: true,\n      };\n    case types.VIEW_SEAT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        seat: action.payload.seat,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/setUpAxios/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/DefaultLayoutDashboard.js",["324","325","326"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport Card from './Card';\nimport { getUsers } from '../actions/users';\nimport { getRoles, assignRole } from '../actions/roles';\n\nconst DefaultDashboard = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const username = localStorage.getItem('username');\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n  const users = useSelector((state) => state.users.users);\n  const roles = useSelector((state) => state.roles.roles);\n  const msg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\n  const [backErrs, setBackErrs] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    role: '',\n    email: '',\n  });\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\n  const [backMsg, setBackMsg] = React.useState('');\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    setBackMsg(msg);\n    setTimeout(() => {\n      setBackMsg('');\n    }, 5000);\n  }, [msg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assignRole(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [isSubmitting]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const HandleClickUsers = () => {\n    setTimeout(() => {\n      props.history.push('/dashboard');\n      window.location.reload(false);\n    }, 3000);\n  };\n\n  const HandleClickStudents = () => {\n    setTimeout(() => {\n      props.history.push('/students');\n      window.location.reload(false);\n    }, 3000);\n  };\n\n  const HandleClickSeats = () => {\n    setTimeout(() => {\n      props.history.push('/seat');\n      window.location.reload(false);\n    }, 3000);\n  };\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Assign Role\n        </ModalHeader>\n        {backMsg ? (\n          <Alert color='success' className='text-center'>\n            {backMsg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Role</Label>\n              <Input type='select' name='role' onChange={onChange}>\n                <option value=''>Select Role</option>\n                {roles.map((role) => (\n                  <option value={role.name} key={role.id}>\n                    {role.name}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input type='select' name='email' onChange={onChange}>\n                <option value=''>Select User Email</option>\n                {users.map((user) => (\n                  <option value={user.email} key={user.id}>\n                    {user.email}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Assign</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Welcome, {username}</h3>\n          <h6 className='text-capitalize text-center'>\n            What do you want to do?\n          </h6>\n          <Container>\n            <Row>\n              <Card count={2} text='Users' onClick={HandleClickUsers} />\n              <Card count={4} text='Students' onClick={HandleClickStudents} />\n              <Card count={4} text='Seats' onClick={HandleClickSeats} />\n            </Row>\n          </Container>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default DefaultDashboard;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Card.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Room.js",["327","328"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/course.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/room/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/room.js",[],{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":22,"column":9,"nodeType":"335","messageId":"336","endLine":22,"endColumn":12},{"ruleId":"337","severity":1,"message":"338","line":57,"column":6,"nodeType":"339","endLine":57,"endColumn":20,"suggestions":"340"},{"ruleId":"337","severity":1,"message":"341","line":30,"column":6,"nodeType":"339","endLine":30,"endColumn":8,"suggestions":"342"},{"ruleId":"337","severity":1,"message":"343","line":86,"column":6,"nodeType":"339","endLine":86,"endColumn":20,"suggestions":"344"},{"ruleId":"337","severity":1,"message":"345","line":63,"column":6,"nodeType":"339","endLine":63,"endColumn":14,"suggestions":"346"},{"ruleId":"337","severity":1,"message":"347","line":75,"column":6,"nodeType":"339","endLine":75,"endColumn":19,"suggestions":"348"},{"ruleId":"337","severity":1,"message":"349","line":15,"column":6,"nodeType":"339","endLine":15,"endColumn":8,"suggestions":"350"},{"ruleId":"337","severity":1,"message":"341","line":30,"column":6,"nodeType":"339","endLine":30,"endColumn":8,"suggestions":"351"},{"ruleId":"337","severity":1,"message":"343","line":88,"column":6,"nodeType":"339","endLine":88,"endColumn":20,"suggestions":"352"},{"ruleId":"337","severity":1,"message":"349","line":15,"column":6,"nodeType":"339","endLine":15,"endColumn":8,"suggestions":"353"},{"ruleId":"337","severity":1,"message":"349","line":44,"column":6,"nodeType":"339","endLine":44,"endColumn":8,"suggestions":"354"},{"ruleId":"337","severity":1,"message":"355","line":84,"column":6,"nodeType":"339","endLine":84,"endColumn":22,"suggestions":"356"},{"ruleId":"337","severity":1,"message":"338","line":104,"column":6,"nodeType":"339","endLine":104,"endColumn":20,"suggestions":"357"},{"ruleId":"337","severity":1,"message":"349","line":31,"column":6,"nodeType":"339","endLine":31,"endColumn":8,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"349","line":34,"column":6,"nodeType":"339","endLine":34,"endColumn":8,"suggestions":"359"},{"ruleId":"337","severity":1,"message":"338","line":79,"column":6,"nodeType":"339","endLine":79,"endColumn":20,"suggestions":"360"},{"ruleId":"337","severity":1,"message":"341","line":31,"column":6,"nodeType":"339","endLine":31,"endColumn":8,"suggestions":"361"},{"ruleId":"337","severity":1,"message":"362","line":74,"column":6,"nodeType":"339","endLine":74,"endColumn":20,"suggestions":"363"},{"ruleId":"337","severity":1,"message":"349","line":15,"column":6,"nodeType":"339","endLine":15,"endColumn":8,"suggestions":"364"},{"ruleId":"337","severity":1,"message":"341","line":31,"column":6,"nodeType":"339","endLine":31,"endColumn":8,"suggestions":"365"},{"ruleId":"337","severity":1,"message":"362","line":74,"column":6,"nodeType":"339","endLine":74,"endColumn":20,"suggestions":"366"},{"ruleId":"337","severity":1,"message":"349","line":22,"column":6,"nodeType":"339","endLine":22,"endColumn":19,"suggestions":"367"},{"ruleId":"337","severity":1,"message":"341","line":31,"column":6,"nodeType":"339","endLine":31,"endColumn":8,"suggestions":"368"},{"ruleId":"337","severity":1,"message":"362","line":74,"column":6,"nodeType":"339","endLine":74,"endColumn":20,"suggestions":"369"},{"ruleId":"333","severity":1,"message":"370","line":21,"column":44,"nodeType":"335","messageId":"336","endLine":21,"endColumn":51},{"ruleId":"337","severity":1,"message":"349","line":30,"column":6,"nodeType":"339","endLine":30,"endColumn":8,"suggestions":"371"},{"ruleId":"337","severity":1,"message":"338","line":91,"column":6,"nodeType":"339","endLine":91,"endColumn":20,"suggestions":"372"},{"ruleId":"337","severity":1,"message":"349","line":15,"column":6,"nodeType":"339","endLine":15,"endColumn":8,"suggestions":"373"},{"ruleId":"337","severity":1,"message":"345","line":60,"column":6,"nodeType":"339","endLine":60,"endColumn":14,"suggestions":"374"},{"ruleId":"337","severity":1,"message":"347","line":72,"column":6,"nodeType":"339","endLine":72,"endColumn":20,"suggestions":"375"},{"ruleId":"337","severity":1,"message":"341","line":31,"column":6,"nodeType":"339","endLine":31,"endColumn":8,"suggestions":"376"},{"ruleId":"337","severity":1,"message":"362","line":75,"column":6,"nodeType":"339","endLine":75,"endColumn":20,"suggestions":"377"},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":20,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":12,"column":1,"nodeType":"380","endLine":43,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":20,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":19,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":7,"column":1,"nodeType":"380","endLine":18,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":13,"column":1,"nodeType":"380","endLine":53,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":12,"column":1,"nodeType":"380","endLine":46,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":23,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":9,"column":1,"nodeType":"380","endLine":26,"endColumn":3},{"ruleId":"337","severity":1,"message":"349","line":32,"column":6,"nodeType":"339","endLine":32,"endColumn":8,"suggestions":"381"},{"ruleId":"337","severity":1,"message":"349","line":35,"column":6,"nodeType":"339","endLine":35,"endColumn":8,"suggestions":"382"},{"ruleId":"337","severity":1,"message":"338","line":80,"column":6,"nodeType":"339","endLine":80,"endColumn":20,"suggestions":"383"},{"ruleId":"337","severity":1,"message":"349","line":42,"column":6,"nodeType":"339","endLine":42,"endColumn":8,"suggestions":"384"},{"ruleId":"337","severity":1,"message":"385","line":108,"column":6,"nodeType":"339","endLine":108,"endColumn":20,"suggestions":"386"},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["389"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'props.match.params.slug'. Either include them or remove the dependency array.",["390"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'state'. Either include them or remove the dependency array.",["391"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'isSubmitting', and 'state'. Either include them or remove the dependency array.",["392"],"React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["393"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["394"],["395"],["396"],["397"],["398"],"React Hook React.useEffect has missing dependencies: 'dept' and 'dispatch'. Either include them or remove the dependency array.",["399"],["400"],["401"],["402"],["403"],["404"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'props.match.params.slug', and 'state'. Either include them or remove the dependency array.",["405"],["406"],["407"],["408"],["409"],["410"],["411"],"'getRole' is defined but never used.",["412"],["413"],["414"],["415"],["416"],["417"],["418"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["419"],["420"],["421"],["422"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'errors', and 'state'. Either include them or remove the dependency array.",["423"],"no-global-assign","no-unsafe-negation",{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"426","fix":"436"},{"desc":"428","fix":"437"},{"desc":"434","fix":"438"},{"desc":"434","fix":"439"},{"desc":"440","fix":"441"},{"desc":"424","fix":"442"},{"desc":"434","fix":"443"},{"desc":"434","fix":"444"},{"desc":"424","fix":"445"},{"desc":"426","fix":"446"},{"desc":"447","fix":"448"},{"desc":"434","fix":"449"},{"desc":"426","fix":"450"},{"desc":"447","fix":"451"},{"desc":"452","fix":"453"},{"desc":"426","fix":"454"},{"desc":"447","fix":"455"},{"desc":"434","fix":"456"},{"desc":"424","fix":"457"},{"desc":"434","fix":"458"},{"desc":"430","fix":"459"},{"desc":"460","fix":"461"},{"desc":"426","fix":"462"},{"desc":"447","fix":"463"},{"desc":"434","fix":"464"},{"desc":"434","fix":"465"},{"desc":"424","fix":"466"},{"desc":"434","fix":"467"},{"desc":"430","fix":"468"},"Update the dependencies array to be: [dispatch, isSubmitting, state]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, props.match.params.slug]",{"range":"471","text":"472"},"Update the dependencies array to be: [dispatch, id, isSubmitting, state]",{"range":"473","text":"474"},"Update the dependencies array to be: [dispatch, errors, isSubmitting, state]",{"range":"475","text":"476"},"Update the dependencies array to be: [checkIsAuth, props.history]",{"range":"477","text":"478"},"Update the dependencies array to be: [dispatch]",{"range":"479","text":"480"},{"range":"481","text":"472"},{"range":"482","text":"474"},{"range":"483","text":"480"},{"range":"484","text":"480"},"Update the dependencies array to be: [dept, dispatch, isCheckingDept]",{"range":"485","text":"486"},{"range":"487","text":"470"},{"range":"488","text":"480"},{"range":"489","text":"480"},{"range":"490","text":"470"},{"range":"491","text":"472"},"Update the dependencies array to be: [dispatch, isSubmitting, props.match.params.slug, state]",{"range":"492","text":"493"},{"range":"494","text":"480"},{"range":"495","text":"472"},{"range":"496","text":"493"},"Update the dependencies array to be: [dispatch, isLoggedOut]",{"range":"497","text":"498"},{"range":"499","text":"472"},{"range":"500","text":"493"},{"range":"501","text":"480"},{"range":"502","text":"470"},{"range":"503","text":"480"},{"range":"504","text":"476"},"Update the dependencies array to be: [checkSuccess, props.history]",{"range":"505","text":"506"},{"range":"507","text":"472"},{"range":"508","text":"493"},{"range":"509","text":"480"},{"range":"510","text":"480"},{"range":"511","text":"470"},{"range":"512","text":"480"},{"range":"513","text":"476"},[1293,1307],"[dispatch, isSubmitting, state]",[568,570],"[dispatch, props.match.params.slug]",[1973,1987],"[dispatch, id, isSubmitting, state]",[1521,1529],"[dispatch, errors, isSubmitting, state]",[1798,1811],"[checkIsAuth, props.history]",[430,432],"[dispatch]",[583,585],[2117,2131],[433,435],[999,1001],[1947,1963],"[dept, dispatch, isCheckingDept]",[2320,2334],[591,593],[653,655],[1940,1954],[619,621],[1789,1803],"[dispatch, isSubmitting, props.match.params.slug, state]",[429,431],[611,613],[1767,1781],[607,620],"[dispatch, isLoggedOut]",[625,627],[1785,1799],[562,564],[2092,2106],[427,429],[1536,1544],[1783,1797],"[checkSuccess, props.history]",[607,609],[1773,1787],[669,671],[731,733],[2018,2032],[1095,1097],[2833,2847]]