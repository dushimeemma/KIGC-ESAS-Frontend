[{"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/index.js":"1","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/App.js":"2","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/store.js":"3","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/Routes/index.js":"4","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/index.js":"5","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/HomePage.js":"6","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/RoleSingle.js":"7","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Login.js":"8","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Finance.js":"9","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/StudentSingle.js":"10","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Attendance.js":"11","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Student.js":"12","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Dashboard.js":"13","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/AttendanceRecord.js":"14","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Course.js":"15","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/CourseRecord.js":"16","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Header.js":"17","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/FinanceRecord.js":"18","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Role.js":"19","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Seat.js":"20","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Signup.js":"21","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/SeatRecord.js":"22","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Footer.js":"23","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Image.js":"24","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Sidebar.js":"25","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/login.js":"26","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/course/index.js":"27","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/auth/index.js":"28","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/finance/index.js":"29","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/attendance/index.js":"30","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/users/index.js":"31","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/roles/index.js":"32","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/students/index.js":"33","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/errors/index.js":"34","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/seat/index.js":"35","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/index.js":"36","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/index.js":"37","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/index.js":"38","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/index.js":"39","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/index.js":"40","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/index.js":"41","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/index.js":"42","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/index.js":"43","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/index.js":"44","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/types.js":"45","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/types.js":"46","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/types.js":"47","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/types.js":"48","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/types.js":"49","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/types.js":"50","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/types.js":"51","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/types.js":"52","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/types.js":"53","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/index.js":"54","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/setUpAxios/index.js":"55","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/DefaultLayoutDashboard.js":"56","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Card.js":"57"},{"size":146,"mtime":1617086707682,"results":"58","hashOfConfig":"59"},{"size":294,"mtime":1617086707672,"results":"60","hashOfConfig":"59"},{"size":369,"mtime":1617086707685,"results":"61","hashOfConfig":"59"},{"size":2468,"mtime":1618212658003,"results":"62","hashOfConfig":"59"},{"size":451,"mtime":1617086707684,"results":"63","hashOfConfig":"59"},{"size":2904,"mtime":1617086707680,"results":"64","hashOfConfig":"59"},{"size":4218,"mtime":1617086707681,"results":"65","hashOfConfig":"59"},{"size":3717,"mtime":1618212662450,"results":"66","hashOfConfig":"59"},{"size":2206,"mtime":1617086707679,"results":"67","hashOfConfig":"59"},{"size":5136,"mtime":1617086707682,"results":"68","hashOfConfig":"59"},{"size":2229,"mtime":1617086707678,"results":"69","hashOfConfig":"59"},{"size":7730,"mtime":1617086707682,"results":"70","hashOfConfig":"59"},{"size":4844,"mtime":1617086707679,"results":"71","hashOfConfig":"59"},{"size":4581,"mtime":1617086707678,"results":"72","hashOfConfig":"59"},{"size":1747,"mtime":1617086707678,"results":"73","hashOfConfig":"59"},{"size":4148,"mtime":1617086707679,"results":"74","hashOfConfig":"59"},{"size":1620,"mtime":1617086707679,"results":"75","hashOfConfig":"59"},{"size":4485,"mtime":1617086707679,"results":"76","hashOfConfig":"59"},{"size":5314,"mtime":1617086707680,"results":"77","hashOfConfig":"59"},{"size":2082,"mtime":1617086707681,"results":"78","hashOfConfig":"59"},{"size":4266,"mtime":1617086707681,"results":"79","hashOfConfig":"59"},{"size":5291,"mtime":1617086707681,"results":"80","hashOfConfig":"59"},{"size":215,"mtime":1617086707679,"results":"81","hashOfConfig":"59"},{"size":180,"mtime":1617086707680,"results":"82","hashOfConfig":"59"},{"size":1279,"mtime":1617086707681,"results":"83","hashOfConfig":"59"},{"size":251,"mtime":1617086707690,"results":"84","hashOfConfig":"59"},{"size":366,"mtime":1617086707683,"results":"85","hashOfConfig":"59"},{"size":1015,"mtime":1617086707683,"results":"86","hashOfConfig":"59"},{"size":368,"mtime":1617086707684,"results":"87","hashOfConfig":"59"},{"size":373,"mtime":1617086707683,"results":"88","hashOfConfig":"59"},{"size":314,"mtime":1617086707685,"results":"89","hashOfConfig":"59"},{"size":1138,"mtime":1617086707684,"results":"90","hashOfConfig":"59"},{"size":976,"mtime":1617086707684,"results":"91","hashOfConfig":"59"},{"size":438,"mtime":1617086707683,"results":"92","hashOfConfig":"59"},{"size":506,"mtime":1617086707684,"results":"93","hashOfConfig":"59"},{"size":320,"mtime":1617086707690,"results":"94","hashOfConfig":"59"},{"size":1967,"mtime":1617086707674,"results":"95","hashOfConfig":"59"},{"size":1988,"mtime":1617086707675,"results":"96","hashOfConfig":"59"},{"size":1019,"mtime":1617086707673,"results":"97","hashOfConfig":"59"},{"size":433,"mtime":1617086707674,"results":"98","hashOfConfig":"59"},{"size":445,"mtime":1617086707673,"results":"99","hashOfConfig":"59"},{"size":429,"mtime":1617086707673,"results":"100","hashOfConfig":"59"},{"size":722,"mtime":1617086707675,"results":"101","hashOfConfig":"59"},{"size":401,"mtime":1617086707676,"results":"102","hashOfConfig":"59"},{"size":83,"mtime":1617086707675,"results":"103","hashOfConfig":"59"},{"size":238,"mtime":1617086707676,"results":"104","hashOfConfig":"59"},{"size":68,"mtime":1617086707673,"results":"105","hashOfConfig":"59"},{"size":52,"mtime":1617086707676,"results":"106","hashOfConfig":"59"},{"size":60,"mtime":1617086707674,"results":"107","hashOfConfig":"59"},{"size":196,"mtime":1617086707675,"results":"108","hashOfConfig":"59"},{"size":196,"mtime":1617086707673,"results":"109","hashOfConfig":"59"},{"size":62,"mtime":1617086707674,"results":"110","hashOfConfig":"59"},{"size":86,"mtime":1617086707674,"results":"111","hashOfConfig":"59"},{"size":240,"mtime":1617086707674,"results":"112","hashOfConfig":"59"},{"size":321,"mtime":1617117425169,"results":"113","hashOfConfig":"59"},{"size":4987,"mtime":1618212671841,"results":"114","hashOfConfig":"59"},{"size":594,"mtime":1618212125578,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"xavob8",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/index.js",[],["256","257"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/App.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/store.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/Routes/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/HomePage.js",["258","259"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HomeImage from './Image';\nimport { viewSeat } from '../actions/seat';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const msg = useSelector((state) => state.seat.msg);\n  const seat = useSelector((state) => state.seat.seat);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const [state, setState] = React.useState({\n    reg: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 15000);\n  }, [backErrors]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(viewSeat(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 16000);\n    }\n  }, [isSubmitting]);\n\n  if (Object.keys(seat).length > 0) {\n    setTimeout(() => {\n      window.location.reload(false);\n    }, 15000);\n  }\n\n  const { reg } = state;\n  return (\n    <Row className='main-height'>\n      <HomeImage />\n      <Col className='back-color border p-2'>\n        <h3 className='text-center mt-2 mb-2'>\n          Enter Your Registration Number <br />\n          To View Your Seat\n        </h3>\n        <hr />\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Label>Registration Number</Label>\n            <Input\n              type='text'\n              name='reg'\n              onChange={onChange}\n              value={reg}\n              placeholder='eg: D/BCS/17/09/6177'\n            />\n          </FormGroup>\n          <Button className='btn btn-secondary btn-block mb-2'>\n            View Seat\n          </Button>\n        </Form>\n        {backErr ? (\n          <Alert className='text-center' color='danger'>\n            {backErr}\n          </Alert>\n        ) : null}\n        {Object.keys(seat).length > 0 ? (\n          <ListGroup>\n            <ListGroupItem color='success'>Name: {seat.name}</ListGroupItem>\n            <ListGroupItem color='success'>RegNo: {seat.regNo}</ListGroupItem>\n            <ListGroupItem color='success'>Level: {seat.level}</ListGroupItem>\n            <ListGroupItem color='success'>\n              Course: {seat.course.name}\n            </ListGroupItem>\n            <ListGroupItem color='success'>\n              Seat: {seat.seat.seatNumber}-{seat.seat.room}\n            </ListGroupItem>\n          </ListGroup>\n        ) : null}\n      </Col>\n    </Row>\n  );\n};\n\nexport default HomePage;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/RoleSingle.js",["260","261"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getRole, updateRole } from '../actions/roles';\n\nconst RoleSingle = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getRole(props.match.params.slug));\n  }, []);\n  const role = useSelector((state) => state.roles.role);\n  const backMsg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.updateSuccess);\n  const [state, setState] = React.useState({\n    id: '',\n    name: '',\n    description: '',\n  });\n  const [modal, setModal] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  React.useEffect(() => {\n    if (Object.keys(role).length !== 0) {\n      setState({\n        id: role.id,\n        name: role.name,\n        description: role.description,\n      });\n    }\n  }, [role]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const { id, name, description } = state;\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(updateRole(state, id));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Update Role\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type='text'\n                name='description'\n                onChange={onChange}\n                value={description}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Update</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Role</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{role.name}</td>\n                <td>{role.description}</td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default RoleSingle;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Login.js",["262","263"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Finance.js",["264"],"import React from 'react';\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Finance = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/finance/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Financial Status</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    {student.Course ? student.Course.name : 'Record Course'}\n                  </td>\n                  <td>\n                    {student.Finance\n                      ? student.Finance.amount\n                      : 'Record Finance'}\n                    Rwfs\n                  </td>\n                  <td>\n                    {student.Finance ? student.Finance.status : 'No Record'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Finance;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/StudentSingle.js",["265","266"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent, updateStudent } from '../actions/students';\n\nconst StudentSingle = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const backMsg = useSelector((state) => state.students.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.students.updateSuccess);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    id: '',\n    regNo: '',\n    name: '',\n    department: '',\n    level: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  React.useEffect(() => {\n    if (Object.keys(student).length > 0) {\n      setState({\n        id: student.id,\n        regNo: student.regNo,\n        name: student.name,\n        department: student.department,\n        level: student.level,\n      });\n    }\n  }, [student]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n  const { id, regNo, name, department, level } = state;\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(updateStudent(state, id));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Update Student\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Reg No</Label>\n              <Input\n                type='text'\n                name='regNo'\n                onChange={onChange}\n                value={regNo}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Department</Label>\n              <Input\n                type='text'\n                name='department'\n                onChange={onChange}\n                value={department}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Level</Label>\n              <Input\n                type='text'\n                name='level'\n                onChange={onChange}\n                value={level}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Update</Button>\n            <Button onClick={toggle} className='btn btn-danger'>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Name</th>\n                <th>Department</th>\n                <th>Level</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.name}</td>\n                <td>{student.regNo}</td>\n                <td>{student.name}</td>\n                <td>{student.department}</td>\n                <td>{student.level}</td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default StudentSingle;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Attendance.js",["267"],"import React from 'react';\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Attendance = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickRecord = (id) => {\n    props.history.push(`/attendance/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Attendance</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>{student.Course ? student.Course.name : 'No course'}</td>\n                  <td>\n                    {student.Attendance\n                      ? student.Attendance.percentage\n                      : 'Record Attandance'}\n                    %\n                  </td>\n                  <td>\n                    {student.Attendance\n                      ? student.Attendance.status\n                      : 'No record'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickRecord(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Attendance;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Student.js",["268","269","270"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n  Input,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport {\n  getStudents,\n  createStudent,\n  deleteStudent,\n  getStudentsPerDept,\n} from '../actions/students';\n\nconst Student = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  const students = useSelector((state) => state.students.students);\n  const backMsg = useSelector((state) => state.students.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.students.createSuccess);\n  const checkDeleteSuccess = useSelector(\n    (state) => state.students.deleteSuccess\n  );\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const [state, setState] = React.useState({\n    regNo: '',\n    name: '',\n    department: '',\n    level: '',\n  });\n  const [dept, setDept] = React.useState({\n    department: '',\n    level: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isCheckingDept, setIsCheckingDept] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onChangeDept = (e) => {\n    const { name, value } = e.target;\n    setDept({ ...dept, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const onSUbmitDept = (e) => {\n    e.preventDefault();\n    setIsCheckingDept(true);\n  };\n\n  React.useEffect(() => {\n    if (isCheckingDept) {\n      dispatch(getStudentsPerDept(dept));\n    }\n  }, [isCheckingDept]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(createStudent(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const [modal, setModal] = React.useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onClickView = (id) => {\n    props.history.push(`/student/${id}`);\n  };\n\n  const onClickDelete = (id) => {\n    dispatch(deleteStudent(id));\n  };\n\n  React.useEffect(() => {\n    if (checkDeleteSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkDeleteSuccess]);\n\n  const { regNo, name, department, level } = state;\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Create Student\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Reg No</Label>\n              <Input\n                type='text'\n                name='regNo'\n                onChange={onChange}\n                value={regNo}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Department</Label>\n              <Input\n                type='text'\n                name='department'\n                onChange={onChange}\n                value={department}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Level</Label>\n              <Input\n                type='text'\n                name='level'\n                onChange={onChange}\n                value={level}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Create</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Row>\n          <Col md='3'>\n            <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\n              Create Student\n            </Button>\n          </Col>\n          <Col md='9'>\n            <Form inline onSubmit={onSUbmitDept}>\n              <Input\n                type='select'\n                name='department'\n                placeholder='department'\n                className='m-1'\n                onChange={onChangeDept}\n              >\n                <option>CHOOSE DEPTERTMENT</option>\n                <option value='BCS'>BCS</option>\n                <option value='BIT'>BIT</option>\n                <option value='BBIT'>BBIT</option>\n              </Input>\n              <Input\n                type='select'\n                name='level'\n                placeholder='level'\n                className='m-1'\n                onChange={onChangeDept}\n              >\n                <option>CHOOSE LEVEL</option>\n                <option value='1'>ONE</option>\n                <option value='2'>TWO</option>\n                <option value='3'>THREE</option>\n              </Input>\n              <Button className='btn btn-secondary m-1'>VIEW</Button>\n            </Form>\n          </Col>\n        </Row>\n        <Container>\n          <h3 className='text-center'>All Students</h3>\n          {msg ? (\n            <Alert color='success' className='text-center'>\n              {msg}\n            </Alert>\n          ) : (\n            ''\n          )}\n          {backErr ? (\n            <Alert color='danger' className='text-center'>\n              {backErr}\n            </Alert>\n          ) : (\n            ''\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo.</th>\n                <th>Name</th>\n                <th>Department</th>\n                <th>Level</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.name}</td>\n                  <td>{student.department}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickDelete(student.id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Student;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Dashboard.js",["271","272","273"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getUsers } from '../actions/users';\nimport { getRoles, assignRole } from '../actions/roles';\n\nconst Dashboard = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n  const users = useSelector((state) => state.users.users);\n  const roles = useSelector((state) => state.roles.roles);\n  const msg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\n  const [backErrs, setBackErrs] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    role: '',\n    email: '',\n  });\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\n  const [backMsg, setBackMsg] = React.useState('');\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    setBackMsg(msg);\n    setTimeout(() => {\n      setBackMsg('');\n    }, 5000);\n  }, [msg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assignRole(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [isSubmitting]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Assign Role\n        </ModalHeader>\n        {backMsg ? (\n          <Alert color='success' className='text-center'>\n            {backMsg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Role</Label>\n              <Input type='select' name='role' onChange={onChange}>\n                <option value=''>Select Role</option>\n                {roles.map((role) => (\n                  <option value={role.name} key={role.id}>\n                    {role.name}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input type='select' name='email' onChange={onChange}>\n                <option value=''>Select User Email</option>\n                {users.map((user) => (\n                  <option value={user.email} key={user.id}>\n                    {user.email}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Assign</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Users And Roles</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Role</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, index) => (\n                <tr key={user.id}>\n                  <td>{index + 1}</td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>{user.Role ? user.Role.name : 'No Role'}</td>\n                  <td>\n                    <Button className='btn btn-sm' onClick={toggle}>\n                      <i className='fas fa-user-edit'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Dashboard;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/AttendanceRecord.js",["274","275"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/attendance';\n\nconst AttendanceRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    percentage: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.attendance.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.attendance.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { percentage } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Attendance\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Percentage</Label>\n              <Input\n                type='text'\n                name='percentage'\n                placeholder='eg: 85'\n                onChange={onChange}\n                value={percentage}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Attendance</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Attendance\n                    ? student.Attendance.percentage\n                    : 'Record Attendance'}\n                  %\n                </td>\n                <td>\n                  {student.Attendance ? student.Attendance.status : 'No Record'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default AttendanceRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Course.js",["276"],"import React from 'react';\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Course = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/course/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Courses</h3>\n        </Container>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>RegNo</th>\n              <th>Level</th>\n              <th>Course</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {students.map((student, index) => (\n              <tr key={student.id}>\n                <td>{index + 1}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  <Button\n                    className='btn btn-sm m-1'\n                    onClick={() => onClickView(student.id)}\n                  >\n                    <i className='fas fa-eye'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Course;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/CourseRecord.js",["277","278"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/course';\n\nconst CourseRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.course.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.course.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { name } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Course\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type='text'\n                name='name'\n                placeholder='eg: JavaScript'\n                onChange={onChange}\n                value={name}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Course</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CourseRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Header.js",["279"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navbar, NavbarBrand, Nav, NavLink, NavItem } from 'reactstrap';\n\nimport './styles.scss';\nimport { logout } from '../actions/auth';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const username = localStorage.getItem('username');\n  const [isLoggedOut, setIsLoggedOut] = React.useState(false);\n  const onClick = () => {\n    setIsLoggedOut(true);\n  };\n  React.useEffect(() => {\n    if (isLoggedOut) {\n      dispatch(logout());\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 3000);\n    }\n  }, [isLoggedOut]);\n  const guestLink = (\n    <Nav className='ml-auto'>\n      <NavItem>\n        <NavLink href='/login' className='text-color'>\n          Login\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='/register' className='text-color'>\n          Register\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n  const authLink = (\n    <Nav className='ml-auto'>\n      <NavItem>\n        <NavLink href='/dashboard' className='text-color'>\n          Welcome <strong className='text-capitalize'>{username}</strong>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          onClick={onClick}\n          className='text-color cursor-pointer'\n          id='logout'\n        >\n          Logout\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n  return (\n    <Navbar className='back-color mb-2'>\n      <NavbarBrand href='/' className='text-color'>\n        KIGC | ESAS\n      </NavbarBrand>\n      {username ? authLink : guestLink}\n    </Navbar>\n  );\n};\n\nexport default Header;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/FinanceRecord.js",["280","281"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from '../components/Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/finance';\n\nconst FinanceRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    amount: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.finance.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.finance.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { amount } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Finance\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Amount</Label>\n              <Input\n                type='text'\n                placeholder='eg: 60000'\n                name='amount'\n                onChange={onChange}\n                value={amount}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Financial Status</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Finance ? student.Finance.amount : 'Record Finance'}\n                </td>\n                <td>\n                  {student.Finance ? student.Finance.status : 'No Record'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default FinanceRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Role.js",["282","283","284"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getRoles, deleteRole, createRole, getRole } from '../actions/roles';\n\nconst Role = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n\n  const roles = useSelector((state) => state.roles.roles);\n  const deleteSuccess = useSelector((state) => state.roles.deleteSuccess);\n  const backMsg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.createSuccess);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n    description: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onClickDelete = (id) => {\n    dispatch(deleteRole(id));\n  };\n\n  const onClickView = (id) => {\n    props.history.push(`/role/${id}`);\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (deleteSuccess) {\n        window.location.reload(false);\n      }\n    }, 6000);\n  }, [deleteSuccess]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(createRole(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (checkSuccess) {\n        window.location.reload(false);\n      }\n    }, 6000);\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { name, description } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Create New Role\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type='text'\n                name='description'\n                onChange={onChange}\n                value={description}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Create</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n\n      <Sidebar />\n\n      <Col md='9'>\n        <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\n          Create Role\n        </Button>\n        <Container>\n          <h3 className='text-center'>All Roles</h3>\n          {msg ? (\n            <Alert color='success' className='text-center'>\n              {msg}\n            </Alert>\n          ) : (\n            ''\n          )}\n          {backErr ? (\n            <Alert color='danger' className='text-center'>\n              {backErr}\n            </Alert>\n          ) : (\n            ''\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {roles.map((role, index) => (\n                <tr key={role.id}>\n                  <td>{index + 1}</td>\n                  <td>{role.name}</td>\n                  <td>{role.description}</td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(role.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickDelete(role.id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Role;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Seat.js",["285"],"import React from 'react';\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Seat = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/seat/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>\n            All Students With Their Respective Seats\n          </h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Seat &#38;&#38; Room</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    {student.Course ? student.Course.name : 'Record Course'}\n                  </td>\n                  <td>\n                    {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\n                    {student.Seat ? student.Seat.room : 'Room'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Seat;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Signup.js",["286","287"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n} from 'reactstrap';\n\nimport { createUser } from '../actions/auth';\nimport Image from '../components/Image';\nimport validation from '../validations';\n\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n  const backMsg = useSelector((state) => state.auth.msg);\n  const checkSuccess = useSelector((state) => state.auth.registered);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const [backErrs, setBackErrs] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = React.useState({});\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validation(state));\n    setIsSubmitting(true);\n  };\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    if (isSubmitting && Object.keys(errors).length === 0) {\n      dispatch(createUser(state));\n    }\n  }, [errors]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        setState({\n          name: '',\n          email: '',\n          password: '',\n        });\n        props.history.push('/login');\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const { name, email, password } = state;\n  const { nameErrors, emailErrors, passwordErrors } = errors;\n  return (\n    <Row className='main-height'>\n      <Col md='6' className='back-color border p-2'>\n        <h3 className='text-center'>\n          Create New Account <br /> To KIGC-ESAS\n        </h3>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <hr />\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Label>Name</Label>\n            <Input\n              type='text'\n              name='name'\n              placeholder='eg: Emma Dushime'\n              onChange={onChange}\n              value={name}\n              className={nameErrors ? 'border-danger' : 'border-success'}\n            />\n            {nameErrors ? (\n              <Label className='alert alert-danger background'>\n                {nameErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type='text'\n              name='email'\n              placeholder='eg: dushimeemma@gmail.com'\n              onChange={onChange}\n              value={email}\n              className={emailErrors ? 'border-danger' : 'border-success'}\n            />\n            {emailErrors ? (\n              <Label className='alert alert-danger background'>\n                {emailErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              placeholder='eg: Password123'\n              onChange={onChange}\n              value={password}\n              className={passwordErrors ? 'border-danger' : 'border-success'}\n            />\n            {passwordErrors ? (\n              <Label className='alert alert-danger background'>\n                {passwordErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <Button className='btn btn-block'>Register</Button>\n        </Form>\n      </Col>\n      <Image />\n    </Row>\n  );\n};\n\nexport default Signup;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/SeatRecord.js",["288","289"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { assign } from '../actions/seat';\n\nconst SeatRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const backMsg = useSelector((state) => state.seat.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.seat.assignSuccess);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    seat: '',\n    room: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assign(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Seat &#38;&#38; Room\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Room</Label>\n              <Input type='select' name='room' onChange={onChange}>\n                <option>Choose Room</option>\n                <option value='Muhabura'>Muhabura</option>\n                <option value='Kalisimbi'>Kalisimbi</option>\n                <option value='Gasabo'>Gasabo</option>\n                <option value='Jari'>Jari</option>\n                <option value='Jabana'>Jabana</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Seat</Label>\n              <Input type='select' name='seat' onChange={onChange}>\n                <option>Choose Seat</option>\n                <option value='001'>001</option>\n                <option value='002'>002</option>\n                <option value='003'>003</option>\n                <option value='004'>004</option>\n                <option value='005'>005</option>\n                <option value='006'>006</option>\n                <option value='007'>007</option>\n                <option value='008'>008</option>\n                <option value='009'>009</option>\n                <option value='010'>010</option>\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student With Seat</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Seat &#38;&#38; Room</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\n                  {student.Seat ? student.Seat.room : 'Room'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SeatRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Footer.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Image.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Sidebar.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/login.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/course/index.js",["290"],"import { types } from '../../actions/course/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_COURSE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/auth/index.js",["291"],"import { types } from '../../actions/auth/types';\n\nconst initialState = {\n  msg: '',\n  status: '',\n  token: '',\n  isAuthenticated: null,\n  registered: false,\n  user: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.REGISTER_SUCCESS:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        registered: true,\n      };\n    case types.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('username', action.payload.user.name);\n      return {\n        ...state,\n        msg: action.payload.msg,\n        token: action.payload.token,\n        user: action.payload.user,\n        isAuthenticated: true,\n      };\n    case types.LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      return {\n        ...state,\n        msg: action.payload.msg,\n        token: '',\n        user: {},\n        isAuthenticated: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/finance/index.js",["292"],"import { types } from '../../actions/finance/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_FINANCE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/attendance/index.js",["293"],"import { types } from '../../actions/attendance/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_ATTENDANCE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/users/index.js",["294"],"import { types } from '../../actions/users/types';\n\nconst initialState = {\n  users: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload.users,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/roles/index.js",["295"],"import { types } from '../../actions/roles/types';\n\nconst initialState = {\n  roles: [],\n  role: {},\n  msg: '',\n  assignSuccess: false,\n  deleteSuccess: false,\n  createSuccess: false,\n  updateSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_ROLES:\n      return {\n        ...state,\n        roles: action.payload.roles,\n      };\n    case types.GET_ROLE:\n      return {\n        ...state,\n        role: action.payload.role,\n      };\n    case types.ASSIGN_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        assignSuccess: true,\n      };\n    case types.DELETE_ROLE:\n      return {\n        ...state,\n        roles: state.roles.filter((role) => role.id !== action.payload.id),\n        msg: action.payload.msg,\n        deleteSuccess: true,\n      };\n    case types.CREATE_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        createSuccess: true,\n      };\n    case types.UPDATE_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        updateSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/students/index.js",["296"],"import { types } from '../../actions/students/types';\n\nconst initialState = {\n  students: [],\n  student: {},\n  msg: '',\n  updateSuccess: false,\n  createSuccess: false,\n  deleteSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_STUDENTS:\n    case types.GET_STUDENTS_DEPT:\n      return {\n        ...state,\n        students: action.payload.students,\n      };\n    case types.GET_STUDENT:\n      return {\n        ...state,\n        student: action.payload.student,\n      };\n    case types.UPDATE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        updateSuccess: true,\n      };\n    case types.CREATE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        createSuccess: true,\n      };\n    case types.DELETE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        deleteSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/errors/index.js",["297"],"import { types } from '../../actions/errors/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    case types.CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/seat/index.js",["298"],"import { types } from '../../actions/seat/types';\n\nconst initialState = {\n  msg: '',\n  assignSuccess: '',\n  seat: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ASSIGN_SEAT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        assignSuccess: true,\n      };\n    case types.VIEW_SEAT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        seat: action.payload.seat,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/setUpAxios/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/DefaultLayoutDashboard.js",["299","300","301"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Card.js",[],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":21,"column":9,"nodeType":"308","messageId":"309","endLine":21,"endColumn":12},{"ruleId":"310","severity":1,"message":"311","line":55,"column":6,"nodeType":"312","endLine":55,"endColumn":20,"suggestions":"313"},{"ruleId":"310","severity":1,"message":"314","line":30,"column":6,"nodeType":"312","endLine":30,"endColumn":8,"suggestions":"315"},{"ruleId":"310","severity":1,"message":"316","line":86,"column":6,"nodeType":"312","endLine":86,"endColumn":20,"suggestions":"317"},{"ruleId":"310","severity":1,"message":"318","line":63,"column":6,"nodeType":"312","endLine":63,"endColumn":14,"suggestions":"319"},{"ruleId":"310","severity":1,"message":"320","line":75,"column":6,"nodeType":"312","endLine":75,"endColumn":19,"suggestions":"321"},{"ruleId":"310","severity":1,"message":"322","line":15,"column":6,"nodeType":"312","endLine":15,"endColumn":8,"suggestions":"323"},{"ruleId":"310","severity":1,"message":"314","line":30,"column":6,"nodeType":"312","endLine":30,"endColumn":8,"suggestions":"324"},{"ruleId":"310","severity":1,"message":"316","line":88,"column":6,"nodeType":"312","endLine":88,"endColumn":20,"suggestions":"325"},{"ruleId":"310","severity":1,"message":"322","line":15,"column":6,"nodeType":"312","endLine":15,"endColumn":8,"suggestions":"326"},{"ruleId":"310","severity":1,"message":"322","line":44,"column":6,"nodeType":"312","endLine":44,"endColumn":8,"suggestions":"327"},{"ruleId":"310","severity":1,"message":"328","line":84,"column":6,"nodeType":"312","endLine":84,"endColumn":22,"suggestions":"329"},{"ruleId":"310","severity":1,"message":"311","line":104,"column":6,"nodeType":"312","endLine":104,"endColumn":20,"suggestions":"330"},{"ruleId":"310","severity":1,"message":"322","line":31,"column":6,"nodeType":"312","endLine":31,"endColumn":8,"suggestions":"331"},{"ruleId":"310","severity":1,"message":"322","line":34,"column":6,"nodeType":"312","endLine":34,"endColumn":8,"suggestions":"332"},{"ruleId":"310","severity":1,"message":"311","line":79,"column":6,"nodeType":"312","endLine":79,"endColumn":20,"suggestions":"333"},{"ruleId":"310","severity":1,"message":"314","line":31,"column":6,"nodeType":"312","endLine":31,"endColumn":8,"suggestions":"334"},{"ruleId":"310","severity":1,"message":"335","line":74,"column":6,"nodeType":"312","endLine":74,"endColumn":20,"suggestions":"336"},{"ruleId":"310","severity":1,"message":"322","line":15,"column":6,"nodeType":"312","endLine":15,"endColumn":8,"suggestions":"337"},{"ruleId":"310","severity":1,"message":"314","line":31,"column":6,"nodeType":"312","endLine":31,"endColumn":8,"suggestions":"338"},{"ruleId":"310","severity":1,"message":"335","line":74,"column":6,"nodeType":"312","endLine":74,"endColumn":20,"suggestions":"339"},{"ruleId":"310","severity":1,"message":"322","line":22,"column":6,"nodeType":"312","endLine":22,"endColumn":19,"suggestions":"340"},{"ruleId":"310","severity":1,"message":"314","line":31,"column":6,"nodeType":"312","endLine":31,"endColumn":8,"suggestions":"341"},{"ruleId":"310","severity":1,"message":"335","line":74,"column":6,"nodeType":"312","endLine":74,"endColumn":20,"suggestions":"342"},{"ruleId":"306","severity":1,"message":"343","line":21,"column":44,"nodeType":"308","messageId":"309","endLine":21,"endColumn":51},{"ruleId":"310","severity":1,"message":"322","line":30,"column":6,"nodeType":"312","endLine":30,"endColumn":8,"suggestions":"344"},{"ruleId":"310","severity":1,"message":"311","line":91,"column":6,"nodeType":"312","endLine":91,"endColumn":20,"suggestions":"345"},{"ruleId":"310","severity":1,"message":"322","line":15,"column":6,"nodeType":"312","endLine":15,"endColumn":8,"suggestions":"346"},{"ruleId":"310","severity":1,"message":"318","line":60,"column":6,"nodeType":"312","endLine":60,"endColumn":14,"suggestions":"347"},{"ruleId":"310","severity":1,"message":"320","line":72,"column":6,"nodeType":"312","endLine":72,"endColumn":20,"suggestions":"348"},{"ruleId":"310","severity":1,"message":"314","line":31,"column":6,"nodeType":"312","endLine":31,"endColumn":8,"suggestions":"349"},{"ruleId":"310","severity":1,"message":"335","line":75,"column":6,"nodeType":"312","endLine":75,"endColumn":20,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":8,"column":1,"nodeType":"353","endLine":20,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":12,"column":1,"nodeType":"353","endLine":43,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":8,"column":1,"nodeType":"353","endLine":20,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":8,"column":1,"nodeType":"353","endLine":19,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":7,"column":1,"nodeType":"353","endLine":18,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":13,"column":1,"nodeType":"353","endLine":53,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":12,"column":1,"nodeType":"353","endLine":46,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":8,"column":1,"nodeType":"353","endLine":23,"endColumn":3},{"ruleId":"351","severity":1,"message":"352","line":9,"column":1,"nodeType":"353","endLine":26,"endColumn":3},{"ruleId":"310","severity":1,"message":"322","line":32,"column":6,"nodeType":"312","endLine":32,"endColumn":8,"suggestions":"354"},{"ruleId":"310","severity":1,"message":"322","line":35,"column":6,"nodeType":"312","endLine":35,"endColumn":8,"suggestions":"355"},{"ruleId":"310","severity":1,"message":"311","line":80,"column":6,"nodeType":"312","endLine":80,"endColumn":20,"suggestions":"356"},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["359"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'props.match.params.slug'. Either include them or remove the dependency array.",["360"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'state'. Either include them or remove the dependency array.",["361"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'isSubmitting', and 'state'. Either include them or remove the dependency array.",["362"],"React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["363"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["364"],["365"],["366"],["367"],["368"],"React Hook React.useEffect has missing dependencies: 'dept' and 'dispatch'. Either include them or remove the dependency array.",["369"],["370"],["371"],["372"],["373"],["374"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'props.match.params.slug', and 'state'. Either include them or remove the dependency array.",["375"],["376"],["377"],["378"],["379"],["380"],["381"],"'getRole' is defined but never used.",["382"],["383"],["384"],["385"],["386"],["387"],["388"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["389"],["390"],["391"],"no-global-assign","no-unsafe-negation",{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"394","fix":"404"},{"desc":"396","fix":"405"},{"desc":"402","fix":"406"},{"desc":"402","fix":"407"},{"desc":"408","fix":"409"},{"desc":"392","fix":"410"},{"desc":"402","fix":"411"},{"desc":"402","fix":"412"},{"desc":"392","fix":"413"},{"desc":"394","fix":"414"},{"desc":"415","fix":"416"},{"desc":"402","fix":"417"},{"desc":"394","fix":"418"},{"desc":"415","fix":"419"},{"desc":"420","fix":"421"},{"desc":"394","fix":"422"},{"desc":"415","fix":"423"},{"desc":"402","fix":"424"},{"desc":"392","fix":"425"},{"desc":"402","fix":"426"},{"desc":"398","fix":"427"},{"desc":"428","fix":"429"},{"desc":"394","fix":"430"},{"desc":"415","fix":"431"},{"desc":"402","fix":"432"},{"desc":"402","fix":"433"},{"desc":"392","fix":"434"},"Update the dependencies array to be: [dispatch, isSubmitting, state]",{"range":"435","text":"436"},"Update the dependencies array to be: [dispatch, props.match.params.slug]",{"range":"437","text":"438"},"Update the dependencies array to be: [dispatch, id, isSubmitting, state]",{"range":"439","text":"440"},"Update the dependencies array to be: [dispatch, errors, isSubmitting, state]",{"range":"441","text":"442"},"Update the dependencies array to be: [checkIsAuth, props.history]",{"range":"443","text":"444"},"Update the dependencies array to be: [dispatch]",{"range":"445","text":"446"},{"range":"447","text":"438"},{"range":"448","text":"440"},{"range":"449","text":"446"},{"range":"450","text":"446"},"Update the dependencies array to be: [dept, dispatch, isCheckingDept]",{"range":"451","text":"452"},{"range":"453","text":"436"},{"range":"454","text":"446"},{"range":"455","text":"446"},{"range":"456","text":"436"},{"range":"457","text":"438"},"Update the dependencies array to be: [dispatch, isSubmitting, props.match.params.slug, state]",{"range":"458","text":"459"},{"range":"460","text":"446"},{"range":"461","text":"438"},{"range":"462","text":"459"},"Update the dependencies array to be: [dispatch, isLoggedOut]",{"range":"463","text":"464"},{"range":"465","text":"438"},{"range":"466","text":"459"},{"range":"467","text":"446"},{"range":"468","text":"436"},{"range":"469","text":"446"},{"range":"470","text":"442"},"Update the dependencies array to be: [checkSuccess, props.history]",{"range":"471","text":"472"},{"range":"473","text":"438"},{"range":"474","text":"459"},{"range":"475","text":"446"},{"range":"476","text":"446"},{"range":"477","text":"436"},[1255,1269],"[dispatch, isSubmitting, state]",[568,570],"[dispatch, props.match.params.slug]",[1973,1987],"[dispatch, id, isSubmitting, state]",[1521,1529],"[dispatch, errors, isSubmitting, state]",[1798,1811],"[checkIsAuth, props.history]",[430,432],"[dispatch]",[583,585],[2117,2131],[433,435],[999,1001],[1947,1963],"[dept, dispatch, isCheckingDept]",[2320,2334],[591,593],[653,655],[1940,1954],[619,621],[1789,1803],"[dispatch, isSubmitting, props.match.params.slug, state]",[429,431],[611,613],[1767,1781],[607,620],"[dispatch, isLoggedOut]",[625,627],[1785,1799],[562,564],[2092,2106],[427,429],[1536,1544],[1783,1797],"[checkSuccess, props.history]",[607,609],[1773,1787],[669,671],[731,733],[2018,2032]]