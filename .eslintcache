[{"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/index.js":"1","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/App.js":"2","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/store.js":"3","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/Routes/index.js":"4","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/index.js":"5","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/HomePage.js":"6","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/RoleSingle.js":"7","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Login.js":"8","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Finance.js":"9","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/StudentSingle.js":"10","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Attendance.js":"11","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Student.js":"12","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Dashboard.js":"13","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Course.js":"14","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/CourseRecord.js":"15","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Header.js":"16","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/FinanceRecord.js":"17","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Role.js":"18","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Seat.js":"19","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Signup.js":"20","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/SeatRecord.js":"21","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Footer.js":"22","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Image.js":"23","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Sidebar.js":"24","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/login.js":"25","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/course/index.js":"26","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/auth/index.js":"27","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/finance/index.js":"28","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/attendance/index.js":"29","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/users/index.js":"30","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/roles/index.js":"31","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/students/index.js":"32","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/errors/index.js":"33","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/seat/index.js":"34","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/index.js":"35","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/index.js":"36","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/index.js":"37","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/index.js":"38","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/index.js":"39","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/index.js":"40","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/index.js":"41","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/index.js":"42","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/index.js":"43","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/types.js":"44","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/types.js":"45","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/types.js":"46","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/types.js":"47","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/types.js":"48","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/types.js":"49","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/types.js":"50","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/types.js":"51","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/types.js":"52","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/index.js":"53","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/setUpAxios/index.js":"54","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/DefaultLayoutDashboard.js":"55","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Card.js":"56","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Room.js":"57","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/course.js":"58","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/room/index.js":"59","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/index.js":"60","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/types.js":"61","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/room.js":"62","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/AttendanceRecord.js":"63"},{"size":146,"mtime":1617086707682,"results":"64","hashOfConfig":"65"},{"size":294,"mtime":1617086707672,"results":"66","hashOfConfig":"65"},{"size":369,"mtime":1617086707685,"results":"67","hashOfConfig":"65"},{"size":2474,"mtime":1619795539613,"results":"68","hashOfConfig":"65"},{"size":488,"mtime":1619795539619,"results":"69","hashOfConfig":"65"},{"size":3127,"mtime":1619458893564,"results":"70","hashOfConfig":"65"},{"size":4218,"mtime":1617086707681,"results":"71","hashOfConfig":"65"},{"size":3883,"mtime":1619456074767,"results":"72","hashOfConfig":"65"},{"size":2206,"mtime":1619795539616,"results":"73","hashOfConfig":"65"},{"size":5579,"mtime":1619456074768,"results":"74","hashOfConfig":"65"},{"size":2229,"mtime":1619795539614,"results":"75","hashOfConfig":"65"},{"size":9769,"mtime":1619795539618,"results":"76","hashOfConfig":"65"},{"size":4844,"mtime":1617086707679,"results":"77","hashOfConfig":"65"},{"size":7187,"mtime":1619456074762,"results":"78","hashOfConfig":"65"},{"size":7161,"mtime":1619795539615,"results":"79","hashOfConfig":"65"},{"size":1620,"mtime":1617086707679,"results":"80","hashOfConfig":"65"},{"size":4485,"mtime":1617086707679,"results":"81","hashOfConfig":"65"},{"size":5314,"mtime":1617086707680,"results":"82","hashOfConfig":"65"},{"size":2082,"mtime":1617086707681,"results":"83","hashOfConfig":"65"},{"size":4588,"mtime":1619456074767,"results":"84","hashOfConfig":"65"},{"size":5291,"mtime":1617086707681,"results":"85","hashOfConfig":"65"},{"size":215,"mtime":1617086707679,"results":"86","hashOfConfig":"65"},{"size":180,"mtime":1617086707680,"results":"87","hashOfConfig":"65"},{"size":1637,"mtime":1619507838730,"results":"88","hashOfConfig":"65"},{"size":251,"mtime":1617086707690,"results":"89","hashOfConfig":"65"},{"size":1195,"mtime":1619456074770,"results":"90","hashOfConfig":"65"},{"size":1015,"mtime":1617086707683,"results":"91","hashOfConfig":"65"},{"size":368,"mtime":1617086707684,"results":"92","hashOfConfig":"65"},{"size":373,"mtime":1617086707683,"results":"93","hashOfConfig":"65"},{"size":314,"mtime":1617086707685,"results":"94","hashOfConfig":"65"},{"size":1138,"mtime":1617086707684,"results":"95","hashOfConfig":"65"},{"size":1117,"mtime":1619795539619,"results":"96","hashOfConfig":"65"},{"size":438,"mtime":1617086707683,"results":"97","hashOfConfig":"65"},{"size":506,"mtime":1617086707684,"results":"98","hashOfConfig":"65"},{"size":320,"mtime":1617086707690,"results":"99","hashOfConfig":"65"},{"size":1967,"mtime":1617086707674,"results":"100","hashOfConfig":"65"},{"size":1989,"mtime":1619784352548,"results":"101","hashOfConfig":"65"},{"size":1019,"mtime":1617086707673,"results":"102","hashOfConfig":"65"},{"size":433,"mtime":1617086707674,"results":"103","hashOfConfig":"65"},{"size":445,"mtime":1617086707673,"results":"104","hashOfConfig":"65"},{"size":1670,"mtime":1619456074761,"results":"105","hashOfConfig":"65"},{"size":722,"mtime":1617086707675,"results":"106","hashOfConfig":"65"},{"size":401,"mtime":1617086707676,"results":"107","hashOfConfig":"65"},{"size":83,"mtime":1617086707675,"results":"108","hashOfConfig":"65"},{"size":238,"mtime":1617086707676,"results":"109","hashOfConfig":"65"},{"size":68,"mtime":1617086707673,"results":"110","hashOfConfig":"65"},{"size":52,"mtime":1617086707676,"results":"111","hashOfConfig":"65"},{"size":221,"mtime":1619456074761,"results":"112","hashOfConfig":"65"},{"size":196,"mtime":1617086707675,"results":"113","hashOfConfig":"65"},{"size":196,"mtime":1617086707673,"results":"114","hashOfConfig":"65"},{"size":62,"mtime":1617086707674,"results":"115","hashOfConfig":"65"},{"size":86,"mtime":1617086707674,"results":"116","hashOfConfig":"65"},{"size":240,"mtime":1617086707674,"results":"117","hashOfConfig":"65"},{"size":321,"mtime":1617117425169,"results":"118","hashOfConfig":"65"},{"size":5196,"mtime":1619795539616,"results":"119","hashOfConfig":"65"},{"size":594,"mtime":1618212125578,"results":"120","hashOfConfig":"65"},{"size":10012,"mtime":1619795539617,"results":"121","hashOfConfig":"65"},{"size":410,"mtime":1619456074771,"results":"122","hashOfConfig":"65"},{"size":770,"mtime":1619456074770,"results":"123","hashOfConfig":"65"},{"size":1061,"mtime":1619456074761,"results":"124","hashOfConfig":"65"},{"size":211,"mtime":1619456074762,"results":"125","hashOfConfig":"65"},{"size":273,"mtime":1619456074771,"results":"126","hashOfConfig":"65"},{"size":4581,"mtime":1619795539614,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"xavob8",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"130"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"130"},"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/index.js",[],["284","285"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/App.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/store.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/Routes/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/HomePage.js",["286","287"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HomeImage from './Image';\nimport { viewSeat } from '../actions/seat';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const msg = useSelector((state) => state.seat.msg);\n  const seat = useSelector((state) => state.seat.seat);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const [state, setState] = React.useState({\n    reg: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setIsSubmitting(false);\n    setTimeout(() => {\n      setBackErr('');\n    }, 15000);\n  }, [backErrors]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(viewSeat(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    setIsSubmitting(false);\n  }, [seat]);\n\n  if (Object.keys(seat).length > 0) {\n    setTimeout(() => {\n      window.location.reload(false);\n    }, 5000);\n  }\n\n  const { reg } = state;\n  return (\n    <Row className='main-height'>\n      <HomeImage />\n      <Col className=''>\n        <div className=' border p-2 aside back-color'>\n          <h3 className='text-center mt-2 mb-2'>\n            Enter Your Registration Number <br />\n            To View Your Seat\n          </h3>\n          <hr />\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label>Registration Number</Label>\n              <Input\n                type='text'\n                name='reg'\n                onChange={onChange}\n                value={reg}\n                placeholder='eg: D/BCS/17/09/6177'\n              />\n            </FormGroup>\n            <Button className='btn btn-secondary btn-block mb-2'>\n              {isSubmitting ? <Spinner color='light' size='sm' /> : 'View Seat'}\n            </Button>\n          </Form>\n          {backErr ? (\n            <Alert className='text-center' color='danger'>\n              {backErr}\n            </Alert>\n          ) : null}\n          {Object.keys(seat).length > 0 ? (\n            <ListGroup>\n              <ListGroupItem color='success'>Name: {seat.name}</ListGroupItem>\n              <ListGroupItem color='success'>RegNo: {seat.regNo}</ListGroupItem>\n              <ListGroupItem color='success'>Level: {seat.level}</ListGroupItem>\n              <ListGroupItem color='success'>\n                Course: {seat.course}\n              </ListGroupItem>\n              <ListGroupItem color='success'>Room: {seat.room}</ListGroupItem>\n            </ListGroup>\n          ) : null}\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default HomePage;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/RoleSingle.js",["288","289"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getRole, updateRole } from '../actions/roles';\n\nconst RoleSingle = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getRole(props.match.params.slug));\n  }, []);\n  const role = useSelector((state) => state.roles.role);\n  const backMsg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.updateSuccess);\n  const [state, setState] = React.useState({\n    id: '',\n    name: '',\n    description: '',\n  });\n  const [modal, setModal] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  React.useEffect(() => {\n    if (Object.keys(role).length !== 0) {\n      setState({\n        id: role.id,\n        name: role.name,\n        description: role.description,\n      });\n    }\n  }, [role]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const { id, name, description } = state;\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(updateRole(state, id));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Update Role\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type='text'\n                name='description'\n                onChange={onChange}\n                value={description}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Update</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Role</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{role.name}</td>\n                <td>{role.description}</td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default RoleSingle;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Login.js",["290","291"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { loginUser } from '../actions/auth';\nimport Image from './Image';\nimport validation from '../validations/login';\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const backMsg = useSelector((state) => state.auth.msg);\n  const checkIsAuth = useSelector((state) => state.auth.isAuthenticated);\n\n  const [backErrs, setBackErrs] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [state, setState] = React.useState({\n    email: '',\n    password: '',\n  });\n\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validation(state));\n    setIsSubmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting && Object.keys(errors).length === 0) {\n      dispatch(loginUser(state));\n    }\n  }, [errors]);\n  React.useEffect(() => {\n    if (checkIsAuth) {\n      setTimeout(() => {\n        setState({\n          email: '',\n          password: '',\n        });\n        props.history.push('/default-dashboard');\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkIsAuth]);\n  const { email, password } = state;\n  const { emailErrors, passwordErrors } = errors;\n  return (\n    <Row className='main-height'>\n      <Image />\n      <Col md='6' className='back-color border p-2'>\n        <h3 className='text-center'>\n          Login To <br />\n          KIGC-ESAS\n        </h3>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <hr />\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type='text'\n              name='email'\n              onChange={onChange}\n              value={email}\n              placeholder='eg: dushimeemma@gmail.com'\n              className={emailErrors ? 'border-danger' : 'border-success'}\n            />\n            {emailErrors ? (\n              <Alert className='alert alert-danger background'>\n                {emailErrors}\n              </Alert>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              onChange={onChange}\n              value={password}\n              placeholder='eg: Password123'\n              className={passwordErrors ? 'border-danger' : 'border-success'}\n            />\n            {passwordErrors ? (\n              <Alert className='alert alert-danger background'>\n                {passwordErrors}\n              </Alert>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <Button className='btn btn-block'>Login</Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Finance.js",["292"],"import React from 'react';\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Finance = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/finance/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Financial Status</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    {student.Course ? student.Course.name : 'Record Course'}\n                  </td>\n                  <td>\n                    {student.Finance\n                      ? student.Finance.amount\n                      : 'Record Finance'}\n                    Rwfs\n                  </td>\n                  <td>\n                    {student.Finance ? student.Finance.status : 'No Record'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Finance;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/StudentSingle.js",["293","294"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent, updateStudent } from '../actions/students';\n\nconst StudentSingle = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const backMsg = useSelector((state) => state.students.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.students.updateSuccess);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    id: '',\n    regNo: '',\n    name: '',\n    department: '',\n    level: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  React.useEffect(() => {\n    if (Object.keys(student).length > 0) {\n      setState({\n        id: student.id,\n        regNo: student.regNo,\n        name: student.name,\n        department: student.department,\n        level: student.level,\n      });\n    }\n  }, [student]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n  const { id, regNo, name, department, level } = state;\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(updateStudent(state, id));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Update Student\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Reg No</Label>\n              <Input\n                type='text'\n                name='regNo'\n                onChange={onChange}\n                value={regNo}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Department</Label>\n              <Input\n                type='text'\n                name='department'\n                onChange={onChange}\n                value={department}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Level</Label>\n              <Input\n                type='text'\n                name='level'\n                onChange={onChange}\n                value={level}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Update</Button>\n            <Button onClick={toggle} className='btn btn-danger'>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Name</th>\n                <th>Department</th>\n                <th>Level</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.name}</td>\n                <td>{student.regNo}</td>\n                <td>{student.name}</td>\n                <td>{student.department}</td>\n                <td>{student.level}</td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default StudentSingle;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Attendance.js",["295"],"import React from 'react';\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Attendance = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickRecord = (id) => {\n    props.history.push(`/attendance/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Attendance</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>{student.Course ? student.Course.name : 'No course'}</td>\n                  <td>\n                    {student.Attendance\n                      ? student.Attendance.percentage\n                      : 'Record Attandance'}\n                    %\n                  </td>\n                  <td>\n                    {student.Attendance\n                      ? student.Attendance.status\n                      : 'No record'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickRecord(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Attendance;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Student.js",["296","297"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n  Input,\n  Spinner,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Sidebar from './Sidebar';\nimport {\n  getStudents,\n  createStudent,\n  deleteStudent,\n  getStudentsPerDept,\n} from '../actions/students';\n\nconst validationSchema = Yup.object().shape({\n  department: Yup.string().required().min(2).label('Department'),\n  level: Yup.string().required().label('level'),\n});\n\nconst Student = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  const students = useSelector((state) => state.students.students);\n  const backMsg = useSelector((state) => state.students.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.students.createSuccess);\n  const checkDeleteSuccess = useSelector(\n    (state) => state.students.deleteSuccess\n  );\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const [state, setState] = React.useState({\n    regNo: '',\n    name: '',\n    department: '',\n    level: '',\n  });\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isChangingClass, setIsChangingClass] = React.useState(false);\n  const [isViewingAllStudents, setIsViewAllStudents] = React.useState(false);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const handleSubmitChangeClass = (values) => {\n    setIsChangingClass(true);\n    setTimeout(() => {\n      dispatch(getStudentsPerDept(values));\n      setIsChangingClass(false);\n    }, 500);\n  };\n\n  const handleViewAllStidents = () => {\n    setIsViewAllStudents(true);\n    setTimeout(() => {\n      dispatch(getStudents());\n      setIsViewAllStudents(false);\n    }, 500);\n  };\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setIsSubmitting(false);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setIsSubmitting(false);\n    setTimeout(() => {\n      setMsg('');\n      dispatch(getStudents());\n    }, 5000);\n  }, [backMsg, dispatch]);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(createStudent(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        // window.location.reload(false);\n        dispatch(getStudents());\n        setState({\n          regNo: '',\n          name: '',\n          department: '',\n          level: '',\n        });\n      }, 6000);\n    }\n  }, [checkSuccess, dispatch]);\n\n  const [modal, setModal] = React.useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onClickView = (id) => {\n    props.history.push(`/student/${id}`);\n  };\n\n  const onClickDelete = (id) => {\n    dispatch(deleteStudent(id));\n  };\n\n  React.useEffect(() => {\n    if (checkDeleteSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkDeleteSuccess]);\n\n  const { regNo, name, department, level } = state;\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Create Student\n        </ModalHeader>\n        {msg && (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Reg No</Label>\n              <Input\n                type='text'\n                name='regNo'\n                onChange={onChange}\n                value={regNo}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Department</Label>\n              <Input\n                type='text'\n                name='department'\n                onChange={onChange}\n                value={department}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Level</Label>\n              <Input\n                type='text'\n                name='level'\n                onChange={onChange}\n                value={level}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>\n              {isSubmitting ? <Spinner color='light' size='sm' /> : 'Create'}\n            </Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Row>\n          <Col md='3'>\n            <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\n              Create Student\n            </Button>\n          </Col>\n          <Col md='3'>\n            <Button\n              className='btn btn-secondary ml-5 mr-5'\n              onClick={handleViewAllStidents}\n            >\n              {isViewingAllStudents ? (\n                <Spinner color='light' size='sm' />\n              ) : (\n                'VIEW ALL STUDENTS'\n              )}\n            </Button>\n          </Col>\n          <Col md='6'>\n            <Formik\n              initialValues={{ department: '', level: '' }}\n              onSubmit={handleSubmitChangeClass}\n              validationSchema={validationSchema}\n            >\n              {({\n                values,\n                handleChange,\n                handleSubmit,\n                errors,\n                touched,\n                handleBlur,\n              }) => (\n                <Form inline onSubmit={handleSubmit}>\n                  <Input\n                    type='select'\n                    name='department'\n                    placeholder='department'\n                    className='m-1'\n                    onChange={handleChange('department')}\n                    onBlur={handleBlur('department')}\n                    value={values.department}\n                  >\n                    <option>CHOOSE DEPTERTMENT</option>\n                    {students.map((student) => (\n                      <option value={student.department} key={student.id}>\n                        {student.department}\n                      </option>\n                    ))}\n                  </Input>\n                  <Input\n                    type='select'\n                    name='level'\n                    placeholder='level'\n                    className='m-1'\n                    onChange={handleChange('level')}\n                    onBlur={handleBlur('level')}\n                    value={values.level}\n                  >\n                    <option>CHOOSE LEVEL</option>\n                    {students.map((student) => (\n                      <option value={student.level} key={student.id}>\n                        {student.level}\n                      </option>\n                    ))}\n                  </Input>\n                  <Button className='btn btn-secondary m-1' type='submit'>\n                    {isChangingClass ? (\n                      <Spinner color='light' size='sm' />\n                    ) : (\n                      'VIEW'\n                    )}\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </Col>\n        </Row>\n        <Container>\n          <h3 className='text-center'>All Students</h3>\n          {msg && checkDeleteSuccess && (\n            <Alert color='success' className='text-center'>\n              {msg}\n            </Alert>\n          )}\n          {backErr ? (\n            <Alert color='danger' className='text-center'>\n              {backErr}\n            </Alert>\n          ) : (\n            ''\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo.</th>\n                <th>Name</th>\n                <th>Department</th>\n                <th>Level</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.name}</td>\n                  <td>{student.department}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickDelete(student.id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Student;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Dashboard.js",["298","299","300"],"import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getUsers } from '../actions/users';\nimport { getRoles, assignRole } from '../actions/roles';\n\nconst Dashboard = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n  const users = useSelector((state) => state.users.users);\n  const roles = useSelector((state) => state.roles.roles);\n  const msg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\n  const [backErrs, setBackErrs] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    role: '',\n    email: '',\n  });\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\n  const [backMsg, setBackMsg] = React.useState('');\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    setBackMsg(msg);\n    setTimeout(() => {\n      setBackMsg('');\n    }, 5000);\n  }, [msg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assignRole(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [isSubmitting]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Assign Role\n        </ModalHeader>\n        {backMsg ? (\n          <Alert color='success' className='text-center'>\n            {backMsg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Role</Label>\n              <Input type='select' name='role' onChange={onChange}>\n                <option value=''>Select Role</option>\n                {roles.map((role) => (\n                  <option value={role.name} key={role.id}>\n                    {role.name}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input type='select' name='email' onChange={onChange}>\n                <option value=''>Select User Email</option>\n                {users.map((user) => (\n                  <option value={user.email} key={user.id}>\n                    {user.email}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Assign</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Users And Roles</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Role</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, index) => (\n                <tr key={user.id}>\n                  <td>{index + 1}</td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>{user.Role ? user.Role.name : 'No Role'}</td>\n                  <td>\n                    <Button className='btn btn-sm' onClick={toggle}>\n                      <i className='fas fa-user-edit'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Dashboard;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Course.js",["301"],"import React from 'react';\nimport { Row, Col, Container, Table, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Course = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/course/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>All Students Courses</h3>\n        </Container>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>RegNo</th>\n              <th>Level</th>\n              <th>Course</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {students.map((student, index) => (\n              <tr key={student.id}>\n                <td>{index + 1}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  <Button\n                    className='btn btn-sm m-1'\n                    onClick={() => onClickView(student.id)}\n                  >\n                    <i className='fas fa-eye'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Course;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/CourseRecord.js",["302","303"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/course';\n\nconst CourseRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.course.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.course.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { name } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Course\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                type='text'\n                name='name'\n                placeholder='eg: JavaScript'\n                onChange={onChange}\n                value={name}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Course</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CourseRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Header.js",["304"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navbar, NavbarBrand, Nav, NavLink, NavItem } from 'reactstrap';\n\nimport './styles.scss';\nimport { logout } from '../actions/auth';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const username = localStorage.getItem('username');\n  const [isLoggedOut, setIsLoggedOut] = React.useState(false);\n  const onClick = () => {\n    setIsLoggedOut(true);\n  };\n  React.useEffect(() => {\n    if (isLoggedOut) {\n      dispatch(logout());\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 3000);\n    }\n  }, [isLoggedOut]);\n  const guestLink = (\n    <Nav className='ml-auto'>\n      <NavItem>\n        <NavLink href='/login' className='text-color'>\n          Login\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='/register' className='text-color'>\n          Register\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n  const authLink = (\n    <Nav className='ml-auto'>\n      <NavItem>\n        <NavLink href='/dashboard' className='text-color'>\n          Welcome <strong className='text-capitalize'>{username}</strong>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          onClick={onClick}\n          className='text-color cursor-pointer'\n          id='logout'\n        >\n          Logout\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n  return (\n    <Navbar className='back-color mb-2'>\n      <NavbarBrand href='/' className='text-color'>\n        KIGC | ESAS\n      </NavbarBrand>\n      {username ? authLink : guestLink}\n    </Navbar>\n  );\n};\n\nexport default Header;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/FinanceRecord.js",["305","306"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from '../components/Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/finance';\n\nconst FinanceRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    amount: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.finance.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.finance.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { amount } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Finance\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Amount</Label>\n              <Input\n                type='text'\n                placeholder='eg: 60000'\n                name='amount'\n                onChange={onChange}\n                value={amount}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Financial Status</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Finance ? student.Finance.amount : 'Record Finance'}\n                </td>\n                <td>\n                  {student.Finance ? student.Finance.status : 'No Record'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default FinanceRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Role.js",["307","308","309"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getRoles, deleteRole, createRole, getRole } from '../actions/roles';\n\nconst Role = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getRoles());\n  }, []);\n\n  const roles = useSelector((state) => state.roles.roles);\n  const deleteSuccess = useSelector((state) => state.roles.deleteSuccess);\n  const backMsg = useSelector((state) => state.roles.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.createSuccess);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n    description: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onClickDelete = (id) => {\n    dispatch(deleteRole(id));\n  };\n\n  const onClickView = (id) => {\n    props.history.push(`/role/${id}`);\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (deleteSuccess) {\n        window.location.reload(false);\n      }\n    }, 6000);\n  }, [deleteSuccess]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(createRole(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (checkSuccess) {\n        window.location.reload(false);\n      }\n    }, 6000);\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { name, description } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='back-color'>\n          Create New Role\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input type='text' name='name' onChange={onChange} value={name} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type='text'\n                name='description'\n                onChange={onChange}\n                value={description}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='back-color'>\n            <Button color='secondary'>Create</Button>\n            <Button color='danger' onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n\n      <Sidebar />\n\n      <Col md='9'>\n        <Button className='btn btn-secondary ml-5 mr-5' onClick={toggle}>\n          Create Role\n        </Button>\n        <Container>\n          <h3 className='text-center'>All Roles</h3>\n          {msg ? (\n            <Alert color='success' className='text-center'>\n              {msg}\n            </Alert>\n          ) : (\n            ''\n          )}\n          {backErr ? (\n            <Alert color='danger' className='text-center'>\n              {backErr}\n            </Alert>\n          ) : (\n            ''\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {roles.map((role, index) => (\n                <tr key={role.id}>\n                  <td>{index + 1}</td>\n                  <td>{role.name}</td>\n                  <td>{role.description}</td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(role.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickDelete(role.id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Role;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Seat.js",["310"],"import React from 'react';\nimport { Row, Col, Container, Button, Table } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudents } from '../actions/students';\n\nconst Seat = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudents());\n  }, []);\n  const students = useSelector((state) => state.students.students);\n  const onClickView = (id) => {\n    props.history.push(`/seat/record/${id}`);\n  };\n  return (\n    <Row className='main-height'>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>\n            All Students With Their Respective Seats\n          </h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Seat &#38;&#38; Room</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.regNo}</td>\n                  <td>{student.level}</td>\n                  <td>\n                    {student.Course ? student.Course.name : 'Record Course'}\n                  </td>\n                  <td>\n                    {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\n                    {student.Seat ? student.Seat.room : 'Room'}\n                  </td>\n                  <td>\n                    <Button\n                      className='btn btn-sm m-1'\n                      onClick={() => onClickView(student.id)}\n                    >\n                      <i className='fas fa-eye'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Seat;\n",["311","312"],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Signup.js",["313","314"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  Alert,\n} from 'reactstrap';\n\nimport { createUser } from '../actions/auth';\nimport Image from '../components/Image';\nimport validation from '../validations';\n\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n  const backMsg = useSelector((state) => state.auth.msg);\n  const checkSuccess = useSelector((state) => state.auth.registered);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const [backErrs, setBackErrs] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [state, setState] = React.useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = React.useState({});\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validation(state));\n    setIsSubmitting(true);\n  };\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs('');\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    if (isSubmitting && Object.keys(errors).length === 0) {\n      dispatch(createUser(state));\n    }\n  }, [errors]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        setState({\n          name: '',\n          email: '',\n          password: '',\n        });\n        props.history.push('/login');\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const { name, email, password } = state;\n  const { nameErrors, emailErrors, passwordErrors } = errors;\n  return (\n    <Row className='main-height'>\n      <Col md='6' className='back-color border p-2'>\n        <h3 className='text-center'>\n          Create New Account <br /> To KIGC-ESAS\n        </h3>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErrs ? (\n          <Alert color='danger' className='text-center'>\n            {backErrs}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <hr />\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <Label>Name</Label>\n            <Input\n              type='text'\n              name='name'\n              placeholder='eg: Emma Dushime'\n              onChange={onChange}\n              value={name}\n              className={nameErrors ? 'border-danger' : 'border-success'}\n            />\n            {nameErrors ? (\n              <Label className='alert alert-danger background'>\n                {nameErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type='text'\n              name='email'\n              placeholder='eg: dushimeemma@gmail.com'\n              onChange={onChange}\n              value={email}\n              className={emailErrors ? 'border-danger' : 'border-success'}\n            />\n            {emailErrors ? (\n              <Label className='alert alert-danger background'>\n                {emailErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input\n              type='password'\n              name='password'\n              placeholder='eg: Password123'\n              onChange={onChange}\n              value={password}\n              className={passwordErrors ? 'border-danger' : 'border-success'}\n            />\n            {passwordErrors ? (\n              <Label className='alert alert-danger background'>\n                {passwordErrors}\n              </Label>\n            ) : (\n              ''\n            )}\n          </FormGroup>\n          <Button className='btn btn-block'>Register</Button>\n        </Form>\n      </Col>\n      <Image />\n    </Row>\n  );\n};\n\nexport default Signup;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/SeatRecord.js",["315","316"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { assign } from '../actions/seat';\n\nconst SeatRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const backMsg = useSelector((state) => state.seat.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.seat.assignSuccess);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    seat: '',\n    room: '',\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assign(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Seat &#38;&#38; Room\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Room</Label>\n              <Input type='select' name='room' onChange={onChange}>\n                <option>Choose Room</option>\n                <option value='Muhabura'>Muhabura</option>\n                <option value='Kalisimbi'>Kalisimbi</option>\n                <option value='Gasabo'>Gasabo</option>\n                <option value='Jari'>Jari</option>\n                <option value='Jabana'>Jabana</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Seat</Label>\n              <Input type='select' name='seat' onChange={onChange}>\n                <option>Choose Seat</option>\n                <option value='001'>001</option>\n                <option value='002'>002</option>\n                <option value='003'>003</option>\n                <option value='004'>004</option>\n                <option value='005'>005</option>\n                <option value='006'>006</option>\n                <option value='007'>007</option>\n                <option value='008'>008</option>\n                <option value='009'>009</option>\n                <option value='010'>010</option>\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student With Seat</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Seat &#38;&#38; Room</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Seat ? student.Seat.seatNumber : 'Record Seat'}-\n                  {student.Seat ? student.Seat.room : 'Room'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SeatRecord;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Footer.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Image.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Sidebar.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/login.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/course/index.js",["317"],"import { types } from '../../actions/course/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_COURSE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/auth/index.js",["318"],"import { types } from '../../actions/auth/types';\n\nconst initialState = {\n  msg: '',\n  status: '',\n  token: '',\n  isAuthenticated: null,\n  registered: false,\n  user: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.REGISTER_SUCCESS:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        registered: true,\n      };\n    case types.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('username', action.payload.user.name);\n      return {\n        ...state,\n        msg: action.payload.msg,\n        token: action.payload.token,\n        user: action.payload.user,\n        isAuthenticated: true,\n      };\n    case types.LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      return {\n        ...state,\n        msg: action.payload.msg,\n        token: '',\n        user: {},\n        isAuthenticated: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/finance/index.js",["319"],"import { types } from '../../actions/finance/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_FINANCE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/attendance/index.js",["320"],"import { types } from '../../actions/attendance/types';\n\nconst initialState = {\n  msg: '',\n  recordSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.RECORD_ATTENDANCE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        recordSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/users/index.js",["321"],"import { types } from '../../actions/users/types';\n\nconst initialState = {\n  users: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload.users,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/roles/index.js",["322"],"import { types } from '../../actions/roles/types';\n\nconst initialState = {\n  roles: [],\n  role: {},\n  msg: '',\n  assignSuccess: false,\n  deleteSuccess: false,\n  createSuccess: false,\n  updateSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_ROLES:\n      return {\n        ...state,\n        roles: action.payload.roles,\n      };\n    case types.GET_ROLE:\n      return {\n        ...state,\n        role: action.payload.role,\n      };\n    case types.ASSIGN_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        assignSuccess: true,\n      };\n    case types.DELETE_ROLE:\n      return {\n        ...state,\n        roles: state.roles.filter((role) => role.id !== action.payload.id),\n        msg: action.payload.msg,\n        deleteSuccess: true,\n      };\n    case types.CREATE_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        createSuccess: true,\n      };\n    case types.UPDATE_ROLE:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        updateSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/students/index.js",["323"],"import { types } from '../../actions/students/types';\n\nconst initialState = {\n  students: [],\n  student: {},\n  msg: '',\n  updateSuccess: false,\n  createSuccess: false,\n  deleteSuccess: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_STUDENTS:\n    case types.GET_STUDENTS_DEPT:\n      return {\n        ...state,\n        students: action.payload.students,\n      };\n    case types.GET_STUDENT:\n      return {\n        ...state,\n        student: action.payload.student,\n      };\n    case types.UPDATE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        updateSuccess: true,\n      };\n    case types.CREATE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        createSuccess: true,\n      };\n    case types.DELETE_STUDENT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        deleteSuccess: true,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/errors/index.js",["324"],"import { types } from '../../actions/errors/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    case types.CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/seat/index.js",["325"],"import { types } from '../../actions/seat/types';\n\nconst initialState = {\n  msg: '',\n  assignSuccess: '',\n  seat: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ASSIGN_SEAT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        assignSuccess: true,\n      };\n    case types.VIEW_SEAT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        seat: action.payload.seat,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/seat/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/students/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/attendance/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/users/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/course/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/roles/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/auth/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/finance/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/errors/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/setUpAxios/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/DefaultLayoutDashboard.js",["326"],"import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Sidebar from \"./Sidebar\";\nimport Card from \"./Card\";\nimport { getUsers } from \"../actions/users\";\nimport { getRooms } from \"../actions/room\";\nimport { getRoles, assignRole } from \"../actions/roles\";\n\nconst DefaultDashboard = (props) => {\n  if (!localStorage.getItem(\"token\")) {\n    props.history.push(\"/\");\n  }\n  const username = localStorage.getItem(\"username\");\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getUsers());\n    dispatch(getRoles());\n    dispatch(getRooms());\n  }, []);\n  React.useEffect(() => {}, []);\n  const users = useSelector((state) => state.users.users);\n  const roles = useSelector((state) => state.roles.roles);\n  const msg = useSelector((state) => state.roles.msg);\n  const { rooms } = useSelector((state) => state.rooms);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.roles.assignSuccess);\n  const [backErrs, setBackErrs] = React.useState(\"\");\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    role: \"\",\n    email: \"\",\n  });\n  const [isSubmitting, setIsSubmmitting] = React.useState(false);\n  const [backMsg, setBackMsg] = React.useState(\"\");\n  React.useEffect(() => {\n    setBackErrs(backErrors);\n    setTimeout(() => {\n      setBackErrs(\"\");\n    }, 5000);\n  }, [backErrors]);\n  React.useEffect(() => {\n    setBackMsg(msg);\n    setTimeout(() => {\n      setBackMsg(\"\");\n    }, 5000);\n  }, [msg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmmitting(true);\n  };\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(assignRole(state));\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [isSubmitting]);\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 5000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const HandleClickUsers = () => {\n    setTimeout(() => {\n      props.history.push(\"/dashboard\");\n      window.location.reload(false);\n    }, 3000);\n  };\n\n  const HandleClickStudents = () => {\n    setTimeout(() => {\n      props.history.push(\"/students\");\n      window.location.reload(false);\n    }, 3000);\n  };\n\n  const HandleClickRooms = () => {\n    setTimeout(() => {\n      props.history.push(\"/room\");\n      window.location.reload(false);\n    }, 3000);\n  };\n\n  return (\n    <Row className=\"main-height\">\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className=\"back-color\">\n          Assign Role\n        </ModalHeader>\n        {backMsg ? (\n          <Alert color=\"success\" className=\"text-center\">\n            {backMsg}\n          </Alert>\n        ) : (\n          \"\"\n        )}\n        {backErrs ? (\n          <Alert color=\"danger\" className=\"text-center\">\n            {backErrs}\n          </Alert>\n        ) : (\n          \"\"\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Role</Label>\n              <Input type=\"select\" name=\"role\" onChange={onChange}>\n                <option value=\"\">Select Role</option>\n                {roles.map((role) => (\n                  <option value={role.name} key={role.id}>\n                    {role.name}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input type=\"select\" name=\"email\" onChange={onChange}>\n                <option value=\"\">Select User Email</option>\n                {users.map((user) => (\n                  <option value={user.email} key={user.id}>\n                    {user.email}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className=\"back-color\">\n            <Button color=\"secondary\">Assign</Button>\n            <Button color=\"danger\" onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md=\"9\">\n        <Container>\n          <h3 className=\"text-center\">Welcome, {username}</h3>\n          <h6 className=\"text-capitalize text-center\">\n            What do you want to do?\n          </h6>\n          <Container>\n            <Row>\n              <Card count={2} text=\"Users\" onClick={HandleClickUsers} />\n              <Card count={4} text=\"Students\" onClick={HandleClickStudents} />\n              <Card\n                count={rooms ? rooms.length : 0}\n                text=\"Rooms\"\n                onClick={HandleClickRooms}\n              />\n            </Row>\n          </Container>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default DefaultDashboard;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Card.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/Room.js",["327","328"],"import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n  Input,\n  Spinner,\n} from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Sidebar from \"./Sidebar\";\nimport { getRooms, createRoom, assignRoom } from \"../actions/room\";\nimport { getCourses } from \"../actions/course\";\nimport roomValidations from \"../validations/room\";\n\nconst Room = (props) => {\n  if (!localStorage.getItem(\"token\")) {\n    props.history.push(\"/\");\n  }\n  const dispatch = useDispatch();\n  const rooms = useSelector((state) => state.rooms.rooms);\n  const backMsg = useSelector((state) => state.rooms.msg);\n  const assignedSuccess = useSelector((state) => state.rooms.assignedSuccess);\n  const { courses } = useSelector((state) => state.course);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.rooms.createSuccess);\n\n  React.useEffect(() => {\n    dispatch(getRooms());\n  }, []);\n  const [state, setState] = React.useState({\n    name: \"\",\n    capacity: 0,\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isAssignSubmit, setIsAssignSubmit] = React.useState(false);\n  const [backErr, setBackErr] = React.useState(\"\");\n  const [msg, setMsg] = React.useState(\"\");\n  const [errors, setErrors] = React.useState({});\n  const [assigned, setAssigned] = React.useState({\n    room_id: \"\",\n    course_id: \"\",\n  });\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n    setErrors({ ...errors, [`${name}Errors`]: null });\n  };\n\n  const onAssignedChange = ({ target }) => {\n    const { name, value } = target;\n    setAssigned({ ...assigned, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setErrors(roomValidations(state));\n    setIsSubmitting(true);\n  };\n\n  const onAssignedSubmit = (e) => {\n    e.preventDefault();\n    if (assigned.course_id && assigned.room_id) {\n      setIsAssignSubmit(true);\n      dispatch(assignRoom(assigned.room_id, assigned.course_id));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsAssignSubmit(false);\n  }, [assignedSuccess]);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setIsSubmitting(false);\n    setIsAssignSubmit(false);\n    setTimeout(() => {\n      setBackErr(\"\");\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setIsSubmitting(false);\n    setIsAssignSubmit(false);\n    setTimeout(() => {\n      setMsg(\"\");\n      dispatch(getRooms());\n    }, 5000);\n  }, [backMsg, dispatch]);\n\n  React.useEffect(() => {\n    if (Object.keys(errors).length !== 0) {\n      setIsSubmitting(false);\n    } else if (isSubmitting) {\n      dispatch(createRoom(state));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        // window.location.reload(false);\n        dispatch(getRooms());\n        setState({\n          name: \"\",\n          capacity: 0,\n        });\n      }, 6000);\n    }\n  }, [checkSuccess, dispatch]);\n\n  const [modal, setModal] = React.useState(false);\n  const [assignModal, setAssignModal] = React.useState(false);\n\n  const toggle = () => setModal(!modal);\n  const toggleAssign = () => {\n    dispatch(getCourses());\n    setAssignModal(!assignModal);\n  };\n\n  const onClickView = (id) => {\n    // To be implemented in the future\n    // props.history.push(`/room/${id}`);\n  };\n\n  const onClickDelete = (id) => {\n    // To be implemented in the future\n  };\n\n  const { name, capacity } = state;\n  return (\n    <Row className=\"main-height\">\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className=\"background\">\n          Create Room\n        </ModalHeader>\n        {msg && (\n          <Alert color=\"success\" className=\"text-center\">\n            {msg}\n          </Alert>\n        )}\n        {backErr ? (\n          <Alert color=\"danger\" className=\"text-center\">\n            {backErr}\n          </Alert>\n        ) : (\n          \"\"\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <Row>\n              <Col sm=\"8\">\n                <FormGroup>\n                  <Label>Name</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={onChange}\n                    value={name}\n                    className={\n                      errors.nameErrors ? \"border-danger\" : \"border-success\"\n                    }\n                  />\n                </FormGroup>\n              </Col>\n              <Col sm=\"4\">\n                <FormGroup>\n                  <Label>Capacity</Label>\n                  <Input\n                    type=\"number\"\n                    name=\"capacity\"\n                    onChange={onChange}\n                    value={capacity}\n                    className={\n                      errors.capacityErrors ? \"border-danger\" : \"border-success\"\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter className=\"background\">\n            <Button className=\"btn btn-secondary\">\n              {isSubmitting ? <Spinner color=\"light\" size=\"sm\" /> : \"Create\"}\n            </Button>\n            <Button className=\"btn btn-danger\" onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n\n      <Modal isOpen={assignModal} toggle={toggleAssign}>\n        <ModalHeader toggle={toggleAssign} className=\"background\">\n          Assign Room\n        </ModalHeader>\n        {msg && (\n          <Alert color=\"success\" className=\"text-center\">\n            {msg}\n          </Alert>\n        )}\n        {backErr ? (\n          <Alert color=\"danger\" className=\"text-center\">\n            {backErr}\n          </Alert>\n        ) : (\n          \"\"\n        )}\n        <Form onSubmit={onAssignedSubmit}>\n          <ModalBody>\n            <Row>\n              <Col sm=\"6\">\n                <FormGroup>\n                  <Label>Select Room</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"room_id\"\n                    list=\"rooms\"\n                    onChange={onAssignedChange}\n                    value={assigned.room_id}\n                  />\n                  <datalist id=\"rooms\">\n                    {rooms.map((room) => (\n                      <option key={room.id} value={room.id}>\n                        {room.name}\n                      </option>\n                    ))}\n                  </datalist>\n                </FormGroup>\n              </Col>\n              <Col sm=\"6\">\n                <FormGroup>\n                  <Label>Select Course</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"course_id\"\n                    list=\"courses\"\n                    onChange={onAssignedChange}\n                    value={assigned.course_id}\n                  />\n                  <datalist id=\"courses\">\n                    {courses.map((course) => (\n                      <option key={course.id} value={course.id}>\n                        {course.name}\n                      </option>\n                    ))}\n                  </datalist>\n                </FormGroup>\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter className=\"background\">\n            <Button className=\"btn btn-secondary\">\n              {isAssignSubmit ? <Spinner color=\"light\" size=\"sm\" /> : \"Assign\"}\n            </Button>\n            <Button className=\"btn btn-danger\" onClick={toggleAssign}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md=\"9\">\n        <Row>\n          <Col sm=\"6\" md=\"4\">\n            <Button className=\"btn btn-secondary ml-5 mr-5\" onClick={toggle}>\n              Create Room\n            </Button>\n          </Col>\n          <Col sm=\"0\" md=\"4\"></Col>\n          <Col sm=\"6\" md=\"4\">\n            <Button\n              className=\"btn btn-secondary ml-5 mr-5\"\n              onClick={toggleAssign}\n            >\n              Assign Room\n            </Button>\n          </Col>\n        </Row>\n        <Container>\n          <h3 className=\"text-center center\">Rooms</h3>\n          {/* {msg && checkDeleteSuccess && (\n            <Alert color=\"success\" className=\"text-center\">\n              {msg}\n            </Alert>\n          )} */}\n          {backErr ? (\n            <Alert color=\"danger\" className=\"text-center\">\n              {backErr}\n            </Alert>\n          ) : (\n            \"\"\n          )}\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Capacity</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            {rooms && (\n              <tbody>\n                {rooms.map((room, index) => (\n                  <tr key={room.id}>\n                    <td>{index + 1}</td>\n                    <td>{room.name}</td>\n                    <td>{room.capacity}</td>\n                    <td>{room.status}</td>\n                    <td>\n                      <Button\n                        className=\"btn btn-sm m-1\"\n                        onClick={() => onClickView(room.id)}\n                      >\n                        <i className=\"fas fa-eye\"></i>\n                      </Button>\n                      <Button\n                        className=\"btn btn-sm m-1\"\n                        onClick={() => onClickDelete(room.id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            )}\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Room;\n","/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/course.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/reducers/room/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/index.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/actions/room/types.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/validations/room.js",[],"/Users/andela/Projects/frontend/personal/react/kigc-esas-frontend/src/components/AttendanceRecord.js",["329","330"],"import React from 'react';\nimport {\n  Row,\n  Col,\n  Container,\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Sidebar from './Sidebar';\nimport { getStudent } from '../actions/students';\nimport { record } from '../actions/attendance';\n\nconst AttendanceRecord = (props) => {\n  if (!localStorage.getItem('token')) {\n    props.history.push('/');\n  }\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getStudent(props.match.params.slug));\n  }, []);\n  const student = useSelector((state) => state.students.student);\n  const [modal, setModal] = React.useState(false);\n  const [state, setState] = React.useState({\n    percentage: '',\n  });\n  const [backErr, setBackErr] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const backMsg = useSelector((state) => state.attendance.msg);\n  const backErrors = useSelector(\n    (state) => state.errors.msg.error || state.errors.msg.msg\n  );\n  const checkSuccess = useSelector((state) => state.attendance.recordSuccess);\n\n  React.useEffect(() => {\n    setBackErr(backErrors);\n    setTimeout(() => {\n      setBackErr('');\n    }, 5000);\n  }, [backErrors]);\n\n  React.useEffect(() => {\n    setMsg(backMsg);\n    setTimeout(() => {\n      setMsg('');\n    }, 5000);\n  }, [backMsg]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      dispatch(record(state, props.match.params.slug));\n    }\n  }, [isSubmitting]);\n\n  React.useEffect(() => {\n    if (checkSuccess) {\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 6000);\n    }\n  }, [checkSuccess]);\n\n  const toggle = () => setModal(!modal);\n\n  const { percentage } = state;\n\n  return (\n    <Row className='main-height'>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} className='background'>\n          Record Attendance\n        </ModalHeader>\n        {msg ? (\n          <Alert color='success' className='text-center'>\n            {msg}\n          </Alert>\n        ) : (\n          ''\n        )}\n        {backErr ? (\n          <Alert color='danger' className='text-center'>\n            {backErr}\n          </Alert>\n        ) : (\n          ''\n        )}\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            <FormGroup>\n              <Label>Percentage</Label>\n              <Input\n                type='text'\n                name='percentage'\n                placeholder='eg: 85'\n                onChange={onChange}\n                value={percentage}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter className='background'>\n            <Button className='btn btn-secondary'>Record</Button>\n            <Button className='btn btn-danger' onClick={toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n      <Sidebar />\n      <Col md='9'>\n        <Container>\n          <h3 className='text-center'>Single Student Attendance</h3>\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>RegNo</th>\n                <th>Level</th>\n                <th>Course</th>\n                <th>Value</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{student.id}</td>\n                <td>{student.regNo}</td>\n                <td>{student.level}</td>\n                <td>\n                  {student.Course ? student.Course.name : 'Record Course'}\n                </td>\n                <td>\n                  {student.Attendance\n                    ? student.Attendance.percentage\n                    : 'Record Attendance'}\n                  %\n                </td>\n                <td>\n                  {student.Attendance ? student.Attendance.status : 'No Record'}\n                </td>\n                <td>\n                  <Button className='btn btn-sm m-1' onClick={toggle}>\n                    <i className='fas fa-edit'></i>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default AttendanceRecord;\n",{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":22,"column":9,"nodeType":"337","messageId":"338","endLine":22,"endColumn":12},{"ruleId":"339","severity":1,"message":"340","line":57,"column":6,"nodeType":"341","endLine":57,"endColumn":20,"suggestions":"342"},{"ruleId":"339","severity":1,"message":"343","line":30,"column":6,"nodeType":"341","endLine":30,"endColumn":8,"suggestions":"344"},{"ruleId":"339","severity":1,"message":"345","line":86,"column":6,"nodeType":"341","endLine":86,"endColumn":20,"suggestions":"346"},{"ruleId":"339","severity":1,"message":"347","line":63,"column":6,"nodeType":"341","endLine":63,"endColumn":14,"suggestions":"348"},{"ruleId":"339","severity":1,"message":"349","line":75,"column":6,"nodeType":"341","endLine":75,"endColumn":19,"suggestions":"350"},{"ruleId":"339","severity":1,"message":"351","line":39,"column":6,"nodeType":"341","endLine":39,"endColumn":8,"suggestions":"352"},{"ruleId":"339","severity":1,"message":"343","line":30,"column":6,"nodeType":"341","endLine":30,"endColumn":8,"suggestions":"353"},{"ruleId":"339","severity":1,"message":"345","line":88,"column":6,"nodeType":"341","endLine":88,"endColumn":20,"suggestions":"354"},{"ruleId":"339","severity":1,"message":"351","line":41,"column":6,"nodeType":"341","endLine":41,"endColumn":8,"suggestions":"355"},{"ruleId":"339","severity":1,"message":"351","line":52,"column":6,"nodeType":"341","endLine":52,"endColumn":8,"suggestions":"356"},{"ruleId":"339","severity":1,"message":"340","line":113,"column":6,"nodeType":"341","endLine":113,"endColumn":20,"suggestions":"357"},{"ruleId":"339","severity":1,"message":"351","line":31,"column":6,"nodeType":"341","endLine":31,"endColumn":8,"suggestions":"358"},{"ruleId":"339","severity":1,"message":"351","line":34,"column":6,"nodeType":"341","endLine":34,"endColumn":8,"suggestions":"359"},{"ruleId":"339","severity":1,"message":"340","line":79,"column":6,"nodeType":"341","endLine":79,"endColumn":20,"suggestions":"360"},{"ruleId":"339","severity":1,"message":"351","line":15,"column":6,"nodeType":"341","endLine":15,"endColumn":8,"suggestions":"361"},{"ruleId":"339","severity":1,"message":"343","line":31,"column":6,"nodeType":"341","endLine":31,"endColumn":8,"suggestions":"362"},{"ruleId":"339","severity":1,"message":"363","line":74,"column":6,"nodeType":"341","endLine":74,"endColumn":20,"suggestions":"364"},{"ruleId":"339","severity":1,"message":"351","line":22,"column":6,"nodeType":"341","endLine":22,"endColumn":19,"suggestions":"365"},{"ruleId":"339","severity":1,"message":"343","line":31,"column":6,"nodeType":"341","endLine":31,"endColumn":8,"suggestions":"366"},{"ruleId":"339","severity":1,"message":"363","line":74,"column":6,"nodeType":"341","endLine":74,"endColumn":20,"suggestions":"367"},{"ruleId":"335","severity":1,"message":"368","line":21,"column":44,"nodeType":"337","messageId":"338","endLine":21,"endColumn":51},{"ruleId":"339","severity":1,"message":"351","line":30,"column":6,"nodeType":"341","endLine":30,"endColumn":8,"suggestions":"369"},{"ruleId":"339","severity":1,"message":"340","line":91,"column":6,"nodeType":"341","endLine":91,"endColumn":20,"suggestions":"370"},{"ruleId":"339","severity":1,"message":"351","line":15,"column":6,"nodeType":"341","endLine":15,"endColumn":8,"suggestions":"371"},{"ruleId":"331","replacedBy":"372"},{"ruleId":"333","replacedBy":"373"},{"ruleId":"339","severity":1,"message":"347","line":60,"column":6,"nodeType":"341","endLine":60,"endColumn":14,"suggestions":"374"},{"ruleId":"339","severity":1,"message":"349","line":72,"column":6,"nodeType":"341","endLine":72,"endColumn":20,"suggestions":"375"},{"ruleId":"339","severity":1,"message":"343","line":31,"column":6,"nodeType":"341","endLine":31,"endColumn":8,"suggestions":"376"},{"ruleId":"339","severity":1,"message":"363","line":75,"column":6,"nodeType":"341","endLine":75,"endColumn":20,"suggestions":"377"},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":20,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":12,"column":1,"nodeType":"380","endLine":43,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":20,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":19,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":7,"column":1,"nodeType":"380","endLine":18,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":13,"column":1,"nodeType":"380","endLine":53,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":12,"column":1,"nodeType":"380","endLine":46,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":23,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":9,"column":1,"nodeType":"380","endLine":26,"endColumn":3},{"ruleId":"339","severity":1,"message":"351","line":23,"column":6,"nodeType":"341","endLine":23,"endColumn":8,"suggestions":"381"},{"ruleId":"339","severity":1,"message":"351","line":42,"column":6,"nodeType":"341","endLine":42,"endColumn":8,"suggestions":"382"},{"ruleId":"339","severity":1,"message":"383","line":108,"column":6,"nodeType":"341","endLine":108,"endColumn":20,"suggestions":"384"},{"ruleId":"339","severity":1,"message":"343","line":31,"column":6,"nodeType":"341","endLine":31,"endColumn":8,"suggestions":"385"},{"ruleId":"339","severity":1,"message":"363","line":74,"column":6,"nodeType":"341","endLine":74,"endColumn":20,"suggestions":"386"},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["389"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'props.match.params.slug'. Either include them or remove the dependency array.",["390"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'state'. Either include them or remove the dependency array.",["391"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'isSubmitting', and 'state'. Either include them or remove the dependency array.",["392"],"React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["393"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["394"],["395"],["396"],["397"],["398"],["399"],["400"],["401"],["402"],["403"],["404"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'props.match.params.slug', and 'state'. Either include them or remove the dependency array.",["405"],["406"],["407"],["408"],"'getRole' is defined but never used.",["409"],["410"],["411"],["387"],["388"],["412"],["413"],["414"],["415"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["416"],["417"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'errors', and 'state'. Either include them or remove the dependency array.",["418"],["419"],["420"],"no-global-assign","no-unsafe-negation",{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"423","fix":"433"},{"desc":"425","fix":"434"},{"desc":"431","fix":"435"},{"desc":"431","fix":"436"},{"desc":"421","fix":"437"},{"desc":"431","fix":"438"},{"desc":"431","fix":"439"},{"desc":"421","fix":"440"},{"desc":"431","fix":"441"},{"desc":"423","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"423","fix":"447"},{"desc":"443","fix":"448"},{"desc":"431","fix":"449"},{"desc":"421","fix":"450"},{"desc":"431","fix":"451"},{"desc":"427","fix":"452"},{"desc":"453","fix":"454"},{"desc":"423","fix":"455"},{"desc":"443","fix":"456"},{"desc":"431","fix":"457"},{"desc":"431","fix":"458"},{"desc":"427","fix":"459"},{"desc":"423","fix":"460"},{"desc":"443","fix":"461"},"Update the dependencies array to be: [dispatch, isSubmitting, state]",{"range":"462","text":"463"},"Update the dependencies array to be: [dispatch, props.match.params.slug]",{"range":"464","text":"465"},"Update the dependencies array to be: [dispatch, id, isSubmitting, state]",{"range":"466","text":"467"},"Update the dependencies array to be: [dispatch, errors, isSubmitting, state]",{"range":"468","text":"469"},"Update the dependencies array to be: [checkIsAuth, props.history]",{"range":"470","text":"471"},"Update the dependencies array to be: [dispatch]",{"range":"472","text":"473"},{"range":"474","text":"465"},{"range":"475","text":"467"},{"range":"476","text":"473"},{"range":"477","text":"473"},{"range":"478","text":"463"},{"range":"479","text":"473"},{"range":"480","text":"473"},{"range":"481","text":"463"},{"range":"482","text":"473"},{"range":"483","text":"465"},"Update the dependencies array to be: [dispatch, isSubmitting, props.match.params.slug, state]",{"range":"484","text":"485"},"Update the dependencies array to be: [dispatch, isLoggedOut]",{"range":"486","text":"487"},{"range":"488","text":"465"},{"range":"489","text":"485"},{"range":"490","text":"473"},{"range":"491","text":"463"},{"range":"492","text":"473"},{"range":"493","text":"469"},"Update the dependencies array to be: [checkSuccess, props.history]",{"range":"494","text":"495"},{"range":"496","text":"465"},{"range":"497","text":"485"},{"range":"498","text":"473"},{"range":"499","text":"473"},{"range":"500","text":"469"},{"range":"501","text":"465"},{"range":"502","text":"485"},[1293,1307],"[dispatch, isSubmitting, state]",[568,570],"[dispatch, props.match.params.slug]",[1973,1987],"[dispatch, id, isSubmitting, state]",[1521,1529],"[dispatch, errors, isSubmitting, state]",[1798,1811],"[checkIsAuth, props.history]",[801,803],"[dispatch]",[583,585],[2117,2131],[867,869],[1237,1239],[2696,2710],[591,593],[653,655],[1940,1954],[429,431],[611,613],[1767,1781],"[dispatch, isSubmitting, props.match.params.slug, state]",[607,620],"[dispatch, isLoggedOut]",[625,627],[1785,1799],[562,564],[2092,2106],[427,429],[1536,1544],[1783,1797],"[checkSuccess, props.history]",[607,609],[1773,1787],[614,616],[1095,1097],[2833,2847],[619,621],[1789,1803]]